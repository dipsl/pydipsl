Search.setIndex({"docnames": ["api", "api/dipsl", "api/dipsl.datatypes", "api/dipsl.nodes", "api/dipsl.pygments", "api/dipsl.settings", "api/dipsl.solvers", "api/modules", "index", "intro", "intro/about", "intro/example", "intro/install", "pygments", "pygments/schema_highliter", "pygments/syntax_highliter", "syntax", "syntax/conditions", "syntax/expressions", "syntax/nodes", "syntax/references", "syntax/units", "syntax/validation", "syntax/values"], "filenames": ["api.rst", "api/dipsl.rst", "api/dipsl.datatypes.rst", "api/dipsl.nodes.rst", "api/dipsl.pygments.rst", "api/dipsl.settings.rst", "api/dipsl.solvers.rst", "api/modules.rst", "index.rst", "intro.rst", "intro/about.rst", "intro/example.rst", "intro/install.rst", "pygments.rst", "pygments/schema_highliter.rst", "pygments/syntax_highliter.rst", "syntax.rst", "syntax/conditions.rst", "syntax/expressions.rst", "syntax/nodes.rst", "syntax/references.rst", "syntax/units.rst", "syntax/validation.rst", "syntax/values.rst"], "titles": ["API", "dipsl package", "dipsl.datatypes package", "dipsl.nodes package", "dipsl.pygments package", "dipsl.settings package", "dipsl.solvers package", "dipsl", "PyDIPSL", "Introduction", "About DIP", "Example of use", "Installation", "Pygments lexer", "Schema highliter", "Syntax highliter", "Syntax", "Conditions", "Expressions", "Nodes", "References", "Units", "Validation", "Values"], "terms": {"dipsl": [0, 8, 11, 12, 14, 15], "packag": [0, 7], "datatyp": [1, 3, 7, 11, 19], "dip_typ": [1, 7], "type": [1, 2, 4, 5, 8, 10, 11, 14, 18, 19, 20, 21, 22, 23], "unit": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 15, 16, 18, 19, 20, 22, 23], "valu": [1, 2, 3, 4, 5, 8, 10, 11, 14, 16, 19, 20, 21, 22], "dip_type_boolean": [1, 7], "booleantyp": [1, 2, 11], "dtype": [1, 2, 3], "dip_type_float": [1, 7], "floattyp": [1, 2, 11], "dip_type_integ": [1, 7], "integertyp": [1, 2, 11], "dip_type_numb": [1, 7], "numbertyp": [1, 2], "convert": [1, 2, 8, 11, 18, 19, 21, 22], "dip_type_str": [1, 7], "stringtyp": [1, 2], "node": [1, 5, 7, 8, 10, 11, 15, 16, 17, 18, 20, 21, 22, 23], "dip_nod": [1, 7], "cast_valu": [1, 3], "condit": [1, 3, 4, 5, 8, 10, 11, 14, 15, 16, 20, 23], "constant": [1, 3, 4, 5, 8, 10, 11, 14, 15, 16], "inject_valu": [1, 3], "modify_valu": [1, 3], "pars": [1, 3, 7, 8, 9, 10, 17, 19, 20, 21, 23], "set_opt": [1, 3], "set_valu": [1, 3], "slice_valu": [1, 3], "dip_nodebas": [1, 7], "nodebas": [1, 3], "code": [1, 3, 8, 9, 10, 12, 19, 20, 21, 22], "defin": [1, 3, 4, 5, 8, 11, 18, 20, 21, 22, 23], "dimens": [1, 3, 4, 7, 8, 18, 19, 20, 21, 22], "indent": [1, 3, 4, 8, 14, 17, 19, 20, 21, 22, 23], "keyword": [1, 3, 4, 5, 17], "line": [1, 3, 7, 8, 19, 22, 23], "name": [1, 3, 4, 7, 14, 15, 17, 18, 19, 20, 21, 22, 23], "option": [1, 3, 4, 5, 8, 10, 11, 14, 15, 16, 17, 23], "sourc": [1, 3, 4, 5, 7, 8, 10, 11, 12, 14, 15, 20], "units_raw": [1, 3], "value_expr": [1, 3], "value_raw": [1, 3], "value_ref": [1, 3], "value_slic": [1, 3], "dip_node_boolean": [1, 7], "booleannod": [1, 3], "is_nod": [1, 3], "dip_node_cas": [1, 7], "casenod": [1, 3], "dip_node_condit": [1, 7], "conditionnod": [1, 3], "dip_node_const": [1, 7], "constantnod": [1, 3], "dip_node_empti": [1, 7], "emptynod": [1, 3], "dip_node_float": [1, 7], "floatnod": [1, 3], "dip_node_format": [1, 7], "formatnod": [1, 3], "dip_node_group": [1, 7], "groupnod": [1, 3], "dip_node_import": [1, 7], "importnod": [1, 3], "dip_node_integ": [1, 7], "integernod": [1, 3], "dip_node_mod": [1, 7], "modnod": [1, 3], "dip_node_opt": [1, 7], "optionnod": [1, 3], "dip_node_sourc": [1, 7], "sourcenod": [1, 3], "dip_node_str": [1, 7], "stringnod": [1, 3], "format": [1, 3, 4, 5, 8, 10, 11, 14, 15, 16, 18, 23], "dip_node_t": [1, 7], "tablenod": [1, 3], "dip_node_unit": [1, 7], "unitnod": [1, 3], "dip_pars": [1, 7], "parser": [1, 3, 8, 23], "ccode": [1, 3], "comment": [1, 3, 4, 14, 15, 19], "is_empti": [1, 3], "is_pars": [1, 3], "kwd_case": [1, 3], "kwd_condit": [1, 3], "kwd_constant": [1, 3], "kwd_format": [1, 3], "kwd_option": [1, 3], "kwd_sourc": [1, 3], "kwd_unit": [1, 3], "part_com": [1, 3], "part_dimens": [1, 3], "part_equ": [1, 3], "part_express": [1, 3], "part_format": [1, 3], "part_ind": [1, 3], "part_nam": [1, 3], "part_refer": [1, 3], "part_slic": [1, 3], "part_typ": [1, 3], "part_unit": [1, 3], "part_valu": [1, 3], "pygment": [1, 7, 8, 10, 14, 15], "dip_lexer_schema": [1, 7, 14], "token": [1, 4], "dip_lexer_styl": [1, 7, 15], "style": [1, 4, 15], "pygments_monkeypatch_styl": [1, 4], "dip_lexer_syntax": [1, 7, 15], "set": [1, 3, 7, 8, 10, 11, 19, 20, 22, 23], "tupl": [1, 3, 4, 5, 11], "case": [1, 3, 4, 5, 8, 11, 15, 17, 19, 20, 21, 22], "els": [1, 4, 5, 8, 15, 17], "end": [1, 4, 5, 8, 10, 11, 15, 17, 19, 20, 23], "fals": [1, 3, 4, 5, 11, 15, 17, 18, 22, 23], "true": [1, 3, 4, 5, 8, 11, 15, 17, 18, 22, 23], "namespac": [1, 4, 5], "numer": [1, 5, 8, 10, 11, 16, 20, 21, 22, 23], "precis": [1, 5, 8], "sign": [1, 5, 15, 19, 22, 23], "negat": [1, 5, 18], "queri": [1, 5, 7, 8, 11, 14, 15, 20], "separ": [1, 5, 17, 18, 19, 20, 22, 23], "valid": [1, 5, 8, 10, 15, 16, 19, 20, 23], "variabl": [1, 4, 5, 8, 11], "wildcard": [1, 5], "solver": [1, 7, 11], "dip_solver_log": [1, 7], "logicalsolv": [1, 6], "env": [1, 2, 3, 6, 7, 11], "solv": [1, 6], "dip_solver_numer": [1, 7], "numericalsolv": [1, 6], "equal": [1, 6, 18, 19, 22], "dip_solver_templ": [1, 7], "templatesolv": [1, 6, 11], "templat": [1, 6, 8, 9, 10, 16, 21], "dip_solver_unit": [1, 7], "unitsolv": [1, 6], "arbitrari": [1, 3, 6, 7, 21, 22], "base": [1, 2, 3, 4, 5, 6, 7, 10, 16, 19, 22], "custom": [1, 6, 8, 10, 16, 20], "deriv": [1, 6, 16, 18], "nbase": [1, 6], "npbase": [1, 6], "prefix": [1, 6, 16], "class": [1, 2, 3, 4, 5, 6, 11], "environ": [1, 3, 6, 7, 11], "list": [1, 2, 3, 4, 10, 11, 20, 21, 22], "dict": [1, 4, 6], "autoref": [1, 7], "str": [1, 2, 3, 4, 8, 15, 17, 18, 19, 20, 22, 23], "none": [1, 2, 3, 6, 8], "parent_ind": [1, 7], "int": [1, 2, 3, 4, 6, 8, 11, 15, 17, 18, 19, 20, 21, 22, 23], "1": [1, 5, 8, 11, 15, 17, 18, 19, 20, 21, 22, 23], "parent_nam": [1, 7], "case_count": [1, 7], "0": [1, 3, 4, 11, 21, 23], "case_nam": [1, 7], "basemodel": [1, 2, 3, 6], "add_sourc": [1, 7], "path": [1, 3, 4, 8, 12, 14, 15, 19, 20], "add": [1, 11, 20], "new": [1, 4, 11, 20, 21, 22, 23], "paramet": [1, 3, 8, 10, 11, 17, 18, 19, 22], "dip": [1, 4, 7, 8, 9, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23], "file": [1, 8, 11, 14, 15, 20], "add_unit": [1, 7], "expr": [1, 6, 18, 21], "express": [1, 4, 8, 10, 14, 15, 16, 17, 21, 22], "data": [1, 7, 8, 9, 10, 19, 20, 22, 23], "verbos": 1, "return": [1, 11, 18, 20], "dictionari": [1, 11], "bool": [1, 2, 3, 4, 8, 11, 15, 18, 19, 23], "displai": 1, "onli": [1, 4, 10, 11, 14, 17, 18, 19, 20, 22, 23], "is_cas": [1, 7], "check": [1, 3], "outsid": 1, "insid": 1, "claus": [1, 17, 22], "pop_nod": [1, 7], "pop": [1, 4], "first": [1, 11, 17, 18, 19, 21], "out": 1, "prepare_nod": [1, 7], "manag": [1, 10, 11], "prepend_nod": [1, 7], "prepend": 1, "select": [1, 11, 20], "local": [1, 4, 8, 10, 20], "accord": [1, 18, 23], "request": [1, 7, 11, 20], "count": 1, "from": [1, 3, 4, 8, 10, 11, 12, 18, 19, 20, 21, 22, 23], "number": [1, 4, 7, 19, 21, 22, 23], "should": [1, 3, 11], "solve_cas": [1, 7], "update_hierarchi": [1, 7], "exclud": [1, 22], "regist": 1, "hierarchi": [1, 15, 16, 17, 20], "ad": [1, 11, 18, 23], "inlin": 1, "object": [1, 3, 5, 11], "float": [1, 2, 3, 4, 8, 10, 11, 15, 18, 19, 20, 21, 22, 23], "from_fil": [1, 7, 8, 11], "filepath": 1, "load": [1, 11], "from_str": [1, 7, 8, 11], "us": [1, 3, 8, 9, 10, 12, 17, 18, 19, 20, 21, 22, 23], "string": [1, 4, 6, 10, 11, 18, 19, 20, 22, 23], "num": [1, 7, 18, 21], "dfn": [1, 7], "symbol": [1, 4, 7, 21], "symbol_bas": [1, 7], "copi": [1, 7], "duplic": 1, "model": 1, "choos": [1, 11], "which": [1, 4, 19, 20, 22], "field": [1, 23], "includ": [1, 4, 12, 20], "chang": 1, "thi": [1, 2, 4, 8, 10, 11, 12, 17, 19, 20, 21, 22, 23], "take": [1, 3], "preced": 1, "over": [1, 19, 23], "updat": 1, "note": [1, 4, 20], "i": [1, 3, 4, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23], "befor": [1, 19], "creat": [1, 8, 11, 20], "you": [1, 4], "trust": 1, "deep": 1, "make": [1, 8, 20], "instanc": [1, 4, 11], "eqdim": [1, 7], "other": [1, 4, 8, 10, 11, 15, 18, 20, 22], "eqnum": [1, 7], "inunitsof": [1, 7], "isnumer": [1, 7], "convert_arbitrari": [1, 7], "unit1": 1, "unit2": 1, "alia": [2, 3], "cast": [3, 18], "raw": 3, "self": [3, 20, 22], "anoth": [3, 11, 19], "inject": [3, 10, 16], "remot": [3, 10, 20], "modifi": [3, 11, 19, 20, 21, 22, 23], "differ": [3, 8, 15, 18, 19, 21, 22], "slice": [3, 4, 14, 20], "part": [3, 20], "If": [3, 4, 17, 18, 19, 21, 22, 23], "current": [3, 4, 10, 11, 20], "taken": [3, 17], "static": 3, "empti": [3, 18, 19, 21, 22, 23], "bit": [3, 23], "64": [3, 23], "group": [3, 15, 19], "import": [3, 8, 10, 11, 12, 16], "32": [3, 23], "mod": 3, "tabl": [3, 4, 10, 15, 16, 18, 20, 21], "direct": [3, 17, 21, 22], "wa": [3, 8, 10, 11, 15], "alreadi": [3, 10, 19, 20, 21], "arg": 4, "kwd": 4, "regexlex": 4, "lexer": [4, 8, 15], "refer": [4, 8, 10, 11, 15, 16, 18, 21, 22], "push": 4, "reference_slic": 4, "2": [4, 5, 8, 11, 15, 17, 18, 20, 21, 22, 23], "root": 4, "liter": [4, 21], "text": [4, 11, 15, 18, 20, 23], "n": [4, 11, 21], "function": [4, 11, 18, 19], "bygroup": 4, "callback": 4, "tag": 4, "za": [4, 15, 22], "z0": 4, "9_": 4, "At": [4, 18], "all": [4, 11, 14, 15, 17, 18, 19, 20, 21, 22, 23], "time": [4, 8, 20, 21, 23], "stack": 4, "state": 4, "initi": [4, 10, 11, 20, 22], "contain": [4, 11, 20, 22], "singl": [4, 17, 19, 20, 21, 22, 23], "The": [4, 8, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23], "top": 4, "call": [4, 19, 22, 23], "regex": 4, "tokentyp": 4, "new_stat": 4, "can": [4, 8, 11, 12, 17, 18, 19, 20, 21, 22, 23], "omit": [4, 15, 17, 19], "signifi": 4, "transit": 4, "ensur": [4, 21], "those": [4, 19, 22], "ar": [4, 8, 10, 11, 12, 15, 17, 18, 19, 20, 21, 22, 23], "last": [4, 17, 20], "element": 4, "also": [4, 10, 12, 17, 18, 19, 20, 21, 22, 23], "combin": [4, 11, 21, 22], "state1": 4, "state2": 4, "anonym": 4, "rule": 4, "two": [4, 11, 17, 18, 19, 20, 21, 22], "more": [4, 12, 18, 19, 20], "exist": [4, 18, 21], "ones": 4, "furthermor": 4, "go": 4, "back": 4, "one": [4, 11, 15, 17, 18, 19, 20, 22, 23], "step": [4, 11], "again": 4, "while": 4, "itself": 4, "replac": 4, "boolean": [4, 10, 18, 19, 22, 23], "bold": 4, "0d47a1": 4, "ital": 4, "fb8c00": 4, "hashbang": 4, "multilin": 4, "preproc": 4, "preprocfil": 4, "special": [4, 10, 11, 15, 17, 19, 21, 22, 23], "9e9e9": 4, "error": [4, 10, 21, 22], "border": 4, "f44336": 4, "escap": [4, 15], "8d6e63": 4, "gener": [4, 10, 11, 15, 18, 22], "delet": 4, "emph": 4, "head": [4, 8], "insert": [4, 20], "output": [4, 20, 23], "prompt": 4, "strong": 4, "subhead": 4, "traceback": 4, "bdbdbd": 4, "757575": 4, "declar": [4, 10, 15, 16, 21, 22, 23], "pseudo": 4, "reserv": 4, "date": 4, "b71c1c": 4, "bin": 4, "hex": 4, "integ": [4, 10, 19, 20, 21, 23], "long": [4, 10, 19, 22], "oct": 4, "558b2f": 4, "affix": 4, "backtick": 4, "char": 4, "delimit": 4, "doc": 4, "doubl": [4, 18, 19, 23], "heredoc": 4, "interpol": 4, "616161": 4, "attribut": 4, "builtin": 4, "decor": 4, "entiti": 4, "except": [4, 21, 22], "magic": 4, "label": 4, "properti": 4, "0097a7": 4, "global": 4, "oper": 4, "word": [4, 23], "punctuat": 4, "marker": 4, "e64a19": 4, "ff8a65": 4, "whitespac": 4, "607d8b": 4, "definit": [4, 8, 9, 10, 14, 15, 16, 18, 20, 21, 22, 23], "individu": [4, 22, 23], "mod_nam": 4, "cl": 4, "expr_doubl": 4, "reference_expr": 4, "expr_singl": 4, "expr_tripl": 4, "node_typ": 4, "type_dim": 4, "node_valu": 4, "9": [4, 15, 21, 23], "e": [4, 8, 11, 18, 19, 21, 22], "str_singl": 4, "str_tripl": 4, "str_doubl": 4, "4": [4, 5, 8, 11, 15, 18, 20, 21, 23], "9sdef": 4, "3": [4, 5, 8, 11, 15, 17, 18, 19, 20, 21, 22, 23], "_": 4, "6": [4, 15, 18, 21, 22, 23], "1e": [5, 11, 21], "06": [5, 11], "expr1": 6, "expr2": 6, "in_unit": 6, "file_in": 6, "file_out": 6, "right": 6, "expr_bak": 6, "subpackag": 7, "submodul": 7, "modul": [7, 8, 10, 11, 12], "content": [7, 20], "dip_environ": [7, 8], "dip_main": 7, "dip_unit": 7, "dip_unitlist": 7, "your": [8, 12], "tastier": 8, "serv": [8, 21], "nice": 8, "introduct": 8, "about": [8, 9, 19], "instal": [8, 9], "exampl": [8, 9, 12, 18, 19, 20, 21, 22], "syntax": [8, 10, 13, 18, 19], "api": 8, "highlit": [8, 13], "schema": [8, 13, 17, 18, 19, 20, 21, 22], "welcom": [8, 10], "document": [8, 10, 11], "shorter": 8, "serial": 8, "languag": [8, 10, 11, 14, 15, 18, 19, 21], "dimension": [8, 10, 18, 19, 21, 22, 23], "input": [8, 10, 11, 22], "an": [8, 10, 11, 15, 17, 18, 19, 20, 21, 22, 23], "implement": [8, 10, 11, 18], "python": [8, 10, 11, 12, 15, 18, 19, 20, 22, 23], "It": [8, 10, 11, 15, 19, 20, 21, 22], "specif": [8, 20, 22], "design": [8, 10, 14], "massiv": 8, "parallel": 8, "physic": [8, 10, 21], "mathemat": [8, 18], "engin": [8, 10], "mostli": 8, "written": [8, 11, 19, 21, 23], "c": [8, 10, 15, 18, 19, 21], "fortran": [8, 10], "Such": [8, 11], "requir": [8, 11, 17, 18, 22], "multipl": [8, 11, 17, 18, 19, 20, 21, 23], "quantiti": [8, 21], "compil": [8, 10], "flag": [8, 10], "In": [8, 10, 11, 15, 19, 20, 21, 22], "larg": [8, 20, 22, 23], "project": [8, 10, 12], "get": [8, 9], "quickli": 8, "messi": 8, "confus": 8, "especi": [8, 11], "when": [8, 11, 20, 21], "sever": [8, 22, 23], "pre": 8, "processor": 8, "bash": 8, "shell": 8, "environment": [8, 11], "csv": [8, 23], "json": [8, 23], "yaml": 8, "toml": 8, "similar": [8, 18, 20, 21, 23], "notat": [8, 18, 19, 20, 21, 22, 23], "adjust": 8, "explicitli": [8, 22], "proper": [8, 10], "most": [8, 14, 18, 21], "notabl": 8, "featur": [8, 10, 11, 20], "explicit": [8, 21], "weight": [8, 15, 18, 19, 20, 21, 23], "56": 8, "kg": [8, 15, 18, 19, 20, 21, 23], "veloc": [8, 20, 21, 23], "78": 8, "km": [8, 20, 21, 23], "": [8, 11, 15, 17, 18, 19, 20, 21, 23], "hierarch": [8, 10, 19], "structur": [8, 10, 19], "human": 8, "nose": 8, "ey": 8, "modif": [8, 10, 11, 15, 16, 20, 21, 22], "automat": [8, 10, 11, 15, 18, 21, 23], "convers": [8, 10, 21], "energi": [8, 18, 21, 22], "j": [8, 21, 22], "erg": [8, 21, 22], "4e": [8, 22], "7": [8, 21, 22, 23], "geometri": [8, 11], "plane": 8, "volum": 8, "inclus": 8, "extern": [8, 20], "wine": 8, "txt": [8, 11, 20], "veggi": 8, "veget": 8, "fruit": [8, 20], "basket": 8, "pear": 8, "legum": 8, "intens": [8, 23], "23": [8, 11, 15, 18, 20, 21, 22, 23], "w": [8, 21, 23], "m2": [8, 21, 23], "cg": [8, 10], "length": [8, 15, 19, 21], "cm": [8, 11, 15, 18, 19, 20, 21], "mass": [8, 20, 21, 23], "g": [8, 11, 15, 19, 21, 22], "mk": 8, "m": [8, 18, 20, 21], "modular": 8, "search": 8, "p": [8, 21], "laser": 8, "1e25": 8, "radiat": [8, 11], "gravit": 8, "laser_set": 8, "radiation_pressur": 8, "pressur": [8, 20, 21], "nativ": [8, 10, 11], "todo": 8, "produc": 8, "support": [8, 10, 11, 18, 19, 21], "tabular": [8, 23], "mani": [8, 15], "side": 8, "doe": [8, 17, 18, 21], "have": [8, 11, 17, 18, 19, 20, 21, 22, 23], "ani": [8, 10, 17, 19, 23], "particular": [8, 11, 22], "develop": [8, 10, 11], "team": 8, "kind": [8, 10], "help": [8, 10], "highli": 8, "appreci": 8, "index": 8, "page": 8, "minimalist": 10, "program": [10, 11, 15, 18], "origin": [10, 19], "subproject": 10, "proprietari": 10, "fusion": 10, "nevertheless": [10, 11, 12, 19], "due": 10, "its": [10, 11, 15, 17, 18, 20, 23], "potenti": [10, 21], "we": [10, 11, 19, 20, 21, 22], "publish": 10, "open": 10, "astrophys": 10, "usual": [10, 22], "depend": [10, 18, 20], "descript": [10, 11, 18, 19, 21], "often": [10, 11, 22], "poorli": 10, "prone": 10, "wrong": 10, "lack": 10, "address": 10, "issu": 10, "provid": [10, 17, 18], "standard": [10, 18, 20, 21, 22, 23], "scalabl": [10, 20], "interfac": 10, "between": [10, 19, 23], "user": [10, 11, 20], "run": 10, "aim": [10, 18], "becom": 10, "tool": [10, 11, 18, 22], "flatten": 10, "learn": 10, "curv": 10, "follow": [10, 11, 12, 14, 18, 19, 20, 21, 22], "version": [10, 18], "scalar": [10, 15, 16, 18], "arrai": [10, 15, 16, 18, 20, 21, 22], "block": [10, 14, 16, 18, 19, 20], "logic": [10, 16, 17, 19, 21, 22], "si": 10, "dure": [10, 22], "branch": [10, 17], "highlight": [10, 14, 15], "still": 10, "beta": 10, "stage": 10, "goal": 10, "below": [10, 15, 18, 20, 21, 22, 23], "yet": 10, "need": [10, 11, 19], "codevelop": 10, "calcul": [10, 21], "sphinx": 10, "collabor": 10, "suggest": 10, "further": [10, 19, 22], "heartili": 10, "under": [10, 22], "mit": 10, "licens": 10, "kindli": 10, "ask": 10, "main": [11, 12, 17, 19, 20], "For": [11, 17, 23], "look": 11, "correspond": [11, 17, 21, 22, 23], "A": [11, 18, 20, 21, 22], "extens": 11, "otherwis": [11, 19], "thei": [11, 19, 20, 21, 22], "interpret": [11, 15, 18], "normal": [11, 19], "runtim": 11, "t_max": 11, "10": [11, 21, 22, 23], "timestep": 11, "01": [11, 18, 20], "box": 11, "size": [11, 19, 20], "x": 11, "nm": 11, "y": [11, 21], "3e7": 11, "heat": 11, "recommend": [11, 12], "statement": 11, "mpi": 11, "36": 11, "core": 11, "96": 11, "env1": 11, "store": [11, 23], "easili": [11, 18, 20], "transfer": 11, "immedi": [11, 22], "without": [11, 18, 19, 20, 21, 23], "addit": [11, 18, 20], "pass": 11, "env2": 11, "method": 11, "geom": 11, "abov": [11, 17, 19, 20, 22, 23], "same": [11, 18, 19, 20, 21, 22], "umber": 11, "order": [11, 15, 19, 22], "what": 11, "give": [11, 18], "control": 11, "compulsori": 11, "mandatori": 11, "fiction": 11, "linear": 11, "cylindr": 11, "spheric": [11, 22], "non": [11, 18, 19, 23], "z": [11, 15, 21, 22], "hydrdynam": 11, "some": [11, 20, 21, 22], "via": [11, 20], "result": [11, 17, 18, 19, 20], "env3": 11, "08": 11, "11": [11, 21, 23], "given": [11, 18, 19, 21, 22, 23], "sometim": [11, 22, 23], "even": [11, 17], "process": [11, 20], "t": [11, 21], "read": 11, "sinc": 11, "later": [11, 19], "avail": 12, "github": 12, "repositori": 12, "One": [12, 19, 20], "librari": 12, "directli": [12, 18, 19, 20, 21, 22], "directori": 12, "pythonpath": 12, "cd": [12, 21], "git": 12, "clone": 12, "http": 12, "com": 12, "pydipsl": 12, "export": 12, "home": 12, "src": 12, "script": [12, 20], "sy": 12, "append": 12, "pypi": 12, "pip3": 12, "section": [12, 21, 22], "basic": [14, 19, 21], "concept": [14, 15], "py": [14, 15], "summar": [14, 18, 21, 22], "possibl": [14, 17, 18, 19, 20, 21, 22, 23], "share": [15, 19, 21], "common": [15, 18, 19], "like": 15, "howev": [15, 18, 19, 20, 21, 22], "enough": 15, "caus": 15, "problem": 15, "therefor": [15, 18], "come": 15, "own": [15, 20], "overview": [15, 23], "capabl": 15, "start": [15, 17, 18, 19, 22, 23], "curli": [15, 18], "bracket": [15, 18, 21, 23], "plain": [15, 18], "ha": [15, 17, 18, 20, 21, 22], "them": [15, 18], "slash": 15, "more_word": 15, "stuff34": 15, "foo": 15, "bar": 15, "43": [15, 18, 22], "b": [15, 18], "d": [15, 21], "12": [15, 18, 21, 23], "3e23": 15, "3e": [15, 18, 22], "pow": [15, 18], "const": [15, 18, 21], "id": [15, 18, 23], "05d": [15, 18], "surnam": [15, 18, 20], "5": [15, 18, 20, 23], "width": [15, 18], "2e": [15, 18], "john": [15, 17, 19, 22, 23], "peter": [15, 19, 23], "simon": [15, 23], "28": [15, 21], "83": 15, "29": 15, "30": [15, 21], "26": [15, 22], "init": [15, 20], "winner": [15, 17], "famili": [15, 19], "smith": [15, 18, 20], "parent": [15, 17, 19, 22], "father": [15, 19], "mother": 15, "mari": [15, 22], "children": [15, 17, 19, 20], "infant": 15, "consecut": 17, "necessari": [17, 23], "second": [17, 18, 21], "There": [17, 18, 19], "child": [17, 19], "must": [17, 18, 19, 22], "higher": [17, 22], "than": [17, 18, 22], "each": [17, 19, 21, 22, 23], "argument": 17, "evalu": [17, 18, 22], "termin": 17, "skip": 17, "subsequ": [17, 19, 21], "test": [17, 18], "purpos": 17, "instead": [17, 20], "veri": [17, 23], "previou": [17, 21], "whose": 17, "after": [17, 19, 22, 23], "jenni": 17, "default": [17, 18, 21], "jona": 17, "toi": 17, "doll": 17, "robot": 17, "nest": [17, 18, 23], "flower": 17, "rose": 17, "dandelion": 17, "color": 17, "red": 17, "blue": 17, "leav": 17, "234": [17, 21, 22, 23], "yellow": 17, "tree": 17, "mapl": 17, "though": 17, "effect": 17, "indirectli": 18, "wrap": [18, 19, 21, 22, 23], "quot": [18, 19, 22, 23], "three": [18, 21], "textual": 18, "describ": [18, 19, 21, 22], "chapter": [18, 19, 20, 21], "least": [18, 19, 23], "space": [18, 19, 21, 23], "24": [18, 21], "ref": [18, 20], "prioriti": 18, "accordingli": [18, 19], "compos": 18, "alwai": [18, 19, 20], "either": [18, 19, 20], "OR": 18, "AND": 18, "thread": 18, "compar": 18, "moment": 18, "plan": 18, "next": [18, 23], "numera": 18, "up": [18, 21], "equal_precis": 18, "inequ": 18, "do": [18, 19, 20, 23], "greater": 18, "smaller": 18, "greather": 18, "299792458": [18, 21], "ev": [18, 21], "79751": 18, "substitut": 18, "advanc": 18, "suppos": 18, "quick": 18, "futur": 18, "substract": 18, "divis": [18, 21], "final": [18, 19, 20, 22, 23], "exp": 18, "exponenti": 18, "dimensionless": 18, "risen": 18, "power": [18, 21], "ln": 18, "natur": 18, "logarithm": 18, "log10": 18, "dimmensionless": 18, "sin": 18, "sine": 18, "co": 18, "cosin": 18, "form": [18, 19, 21, 23], "345": 18, "tina": 18, "bodi": 18, "62": 18, "height": [18, 21], "177": 18, "marri": 18, "person": [18, 20], "2f": 18, "00345": 18, "230e": 18, "00": 18, "specifi": [18, 19, 20, 22, 23], "Will": [18, 20], "235": 18, "34": [18, 20, 21, 22, 23], "1e10": 18, "2e23": 18, "5e20": 18, "preview": 18, "00e": 18, "354e": 18, "02": 18, "400e": [18, 20], "000e": [18, 20], "20": 18, "member": 19, "interchang": 19, "begin": 19, "determin": [19, 21], "consist": [19, 20, 21, 22, 23], "zero": [19, 21], "letter": [19, 22], "underscor": 19, "hyphen": 19, "dot": 19, "becaus": [19, 20, 21], "four": [19, 23], "principl": [19, 21], "extend": 19, "match": [19, 20, 22], "left": 19, "charact": [19, 22], "span": [19, 23], "detail": 19, "subsect": 19, "respect": 19, "hash": 19, "occurr": 19, "70": 19, "80": [19, 21], "90": [19, 21], "100": [19, 21], "pc": [19, 21], "086e18": 19, "where": 19, "88": 19, "organ": 19, "wai": [19, 20], "lower": 19, "sibl": 19, "level": 19, "allow": [19, 22], "vari": 19, "grandfath": 19, "cintia": 19, "ben": 19, "lucia": 19, "son": 19, "benjamin": 19, "daughter": 19, "aunt": 19, "both": [19, 20, 21], "besid": [19, 20], "arrang": 19, "carri": 19, "nor": 19, "Their": 19, "enter": 19, "transform": 19, "plu": 19, "dog": [19, 22], "lassi": 19, "referenc": 20, "enabl": 20, "reusabl": 20, "url": 20, "question": 20, "mark": [20, 22, 23], "onc": 20, "context": 20, "simpl": [20, 21], "domain": 20, "were": 20, "complet": 20, "independ": 20, "full": 20, "asterix": 20, "applic": 20, "locat": 20, "explain": 20, "embed": 20, "shown": 20, "icecream": 20, "waffl": 20, "scoop": 20, "strawberri": 20, "chocol": 20, "bowl": 20, "plate": 20, "work": 20, "just": 20, "front": 20, "bag": 20, "vegi": 20, "potato": 20, "subnod": 20, "so": [20, 21], "far": [20, 21], "how": [20, 21], "regular": [20, 22], "dynam": 20, "whole": 20, "size1": 20, "size2": 20, "size3": 20, "3400": 20, "magnet": 20, "host": 20, "adopt": [20, 21], "1e34": 20, "mysiz": 20, "rang": [20, 22], "mymass": 20, "334e": 20, "keep": 20, "readabl": 20, "edit": 20, "messag": [20, 22], "comparison": [20, 21], "markup": 21, "nomenclatur": 21, "sensit": 21, "unifi": 21, "measur": 21, "assign": 21, "assum": 21, "ag": 21, "185": 21, "35": 21, "190": 21, "90000": 21, "point": 21, "nv": 21, "msr": 21, "ten": 21, "meter": 21, "gram": 21, "k": 21, "kelvin": 21, "coulomb": 21, "candela": 21, "mol": 21, "mole": 21, "rad": 21, "radian": 21, "mr": 21, "newton": 21, "rais": [21, 22], "1e3": [21, 23], "yotta": 21, "1e24": 21, "zetta": 21, "1e21": 21, "21": 21, "exa": 21, "1e18": 21, "18": 21, "peta": 21, "1e15": 21, "15": [21, 23], "tera": 21, "1e12": 21, "giga": 21, "1e9": 21, "mega": 21, "1e6": 21, "kilo": 21, "h": 21, "hecto": 21, "1e2": 21, "da": 21, "deka": 21, "1e1": 21, "deci": 21, "centi": 21, "milli": 21, "u": 21, "micro": 21, "nano": 21, "pico": 21, "f": 21, "femto": 21, "atto": 21, "zepto": 21, "yocto": 21, "As": 21, "mention": 21, "fourth": 21, "plai": 21, "promin": 21, "role": 21, "integr": 21, "close": 21, "pu": 21, "rad2": 21, "real": 21, "s2": 21, "parenthesi": 21, "thu": 21, "cannot": [21, 22], "101": 21, "pa": 21, "distanc": [21, 23], "123": 21, "60": 21, "8": [21, 23], "3e2": 21, "simpli": 21, "sum": 21, "multipli": 21, "divid": 21, "progenitor": 21, "correspondingli": 21, "rebas": 21, "squar": 21, "m_p": 21, "coincid": 21, "sr": 21, "steradian": 21, "hz": 21, "hertz": 21, "pascal": 21, "joul": 21, "watt": 21, "amper": 21, "v": 21, "volt": 21, "farad": 21, "ohm": 21, "siemen": 21, "wb": 21, "weber": 21, "tesla": 21, "henri": 21, "lm": 21, "lumen": 21, "lx": 21, "lux": 21, "bq": 21, "becquerel": 21, "gy": 21, "grai": 21, "sv": 21, "sivert": 21, "dyn": 21, "dyne": 21, "gauss": 21, "deg": 21, "angl": 21, "degre": 21, "pi": 21, "360": 21, "minut": 21, "l": 21, "dm3": 21, "min": 21, "hour": 21, "dai": [21, 23], "a_t": 21, "tropic": 21, "year": [21, 23], "365": 21, "24219": 21, "a_j": 21, "julian": 21, "25": [21, 22, 23], "a_g": 21, "gregorian": 21, "2425": 21, "electronvolt": 21, "au": 21, "astr": 21, "149597": 21, "870691": 21, "mm": 21, "light": 21, "planck": 21, "6260755e": 21, "boltzmann": 21, "380658e": 21, "eps_0": 21, "permit": 21, "vac": 21, "854187817e": 21, "mu_0": 21, "permeab": 21, "a2": 21, "elem": 21, "charg": 21, "60217733e": 21, "19": 21, "m_e": 21, "electron": 21, "1093897e": 21, "proton": 21, "6726231e": 21, "grav": 21, "67259e": 21, "m3": 21, "accel": 21, "80665": 21, "atm": 21, "101325": 21, "ly": 21, "141593": 21, "euler": 21, "718282": 21, "n_a": 21, "avogadro": 21, "022137e23": 21, "percent": 21, "ppth": 21, "promil": 21, "similarli": [21, 23], "achiev": [21, 22], "densiti": 21, "lenght": 21, "restrict": 22, "accept": 22, "few": 22, "discret": 22, "These": 22, "implicitli": 22, "coordin": 22, "carthesian": 22, "polar": 22, "throw": 22, "anim": [22, 23], "cat": 22, "hors": 22, "too": 22, "practic": 22, "write": 22, "shorthand": 22, "expect": 22, "similiarli": 22, "against": 22, "45": 22, "490": 22, "1939": 22, "34e": 22, "interv": 22, "actual": 22, "small": 22, "capit": 22, "ferdin": 22, "stai": 22, "night": 23, "2023": 23, "durat": 23, "3e20": 23, "scientif": 23, "citi": 23, "york": 23, "countri": 23, "kingdom": 23, "handl": 23, "data1": 23, "exactli": 23, "data2": 23, "data3": 23, "34e4": 23, "data4": 23, "maximum": 23, "tight": 23, "want": 23, "loos": 23, "multidimension": 23, "matrix": 23, "appli": 23, "50": 23, "95": 23, "1e4": 23, "tripl": 23, "13": 23, "14": 23, "16": 23, "lorem": 23, "ipsum": 23, "dolor": 23, "sit": 23, "amet": 23, "consectetur": 23, "adipisc": 23, "elit": 23, "sed": 23, "eiusmod": 23, "tempor": 23, "incididunt": 23, "ut": 23, "labor": 23, "et": 23, "magna": 23, "aliqua": 23, "enim": 23, "minim": 23, "veniam": 23, "qui": 23, "nostrud": 23, "exercit": 23, "ullamco": 23, "labori": 23, "nisi": 23, "aliquip": 23, "ex": 23, "ea": 23, "commodo": 23, "consequat": 23, "dui": 23, "aut": 23, "irur": 23, "reprehenderit": 23, "volupt": 23, "velit": 23, "ess": 23, "cillum": 23, "eu": 23, "fugiat": 23, "nulla": 23, "pariatur": 23, "excepteur": 23, "sint": 23, "occaecat": 23, "cupidatat": 23, "proident": 23, "sunt": 23, "culpa": 23, "officia": 23, "deserunt": 23, "mollit": 23, "est": 23, "laborum": 23, "easier": 23, "compendi": 23, "put": 23, "amount": 23, "reason": 23, "tabul": 23, "header": 23, "column": 23, "snapshot": 23, "355": 23, "535": 23, "255": 23, "455": 23, "equival": 23}, "objects": {"": [[1, 0, 0, "-", "dipsl"]], "dipsl": [[1, 0, 0, "-", "DIP_Environment"], [1, 0, 0, "-", "DIP_Main"], [1, 0, 0, "-", "DIP_Unit"], [1, 0, 0, "-", "DIP_UnitList"], [2, 0, 0, "-", "datatypes"], [3, 0, 0, "-", "nodes"], [4, 0, 0, "-", "pygments"], [5, 0, 0, "-", "settings"], [6, 0, 0, "-", "solvers"]], "dipsl.DIP_Environment": [[1, 1, 1, "", "Environment"]], "dipsl.DIP_Environment.Environment": [[1, 2, 1, "", "add_source"], [1, 2, 1, "", "add_unit"], [1, 3, 1, "", "autoref"], [1, 3, 1, "", "case_counts"], [1, 3, 1, "", "case_names"], [1, 2, 1, "", "data"], [1, 2, 1, "", "is_case"], [1, 3, 1, "", "nodes"], [1, 3, 1, "", "parent_indents"], [1, 3, 1, "", "parent_names"], [1, 2, 1, "", "pop_node"], [1, 2, 1, "", "prepare_node"], [1, 2, 1, "", "prepend_nodes"], [1, 2, 1, "", "query"], [1, 2, 1, "", "request"], [1, 2, 1, "", "solve_case"], [1, 3, 1, "", "sources"], [1, 3, 1, "", "units"], [1, 2, 1, "", "update_hierarchy"]], "dipsl.DIP_Main": [[1, 1, 1, "", "DIP"]], "dipsl.DIP_Main.DIP": [[1, 2, 1, "", "add_source"], [1, 2, 1, "", "add_unit"], [1, 3, 1, "", "env"], [1, 2, 1, "", "from_file"], [1, 2, 1, "", "from_string"], [1, 3, 1, "", "lines"], [1, 2, 1, "", "parse"], [1, 3, 1, "", "source"]], "dipsl.DIP_Unit": [[1, 1, 1, "", "Unit"]], "dipsl.DIP_Unit.Unit": [[1, 3, 1, "", "arbitrary"], [1, 3, 1, "", "base"], [1, 2, 1, "", "copy"], [1, 3, 1, "", "dfn"], [1, 2, 1, "", "dimension"], [1, 2, 1, "", "eqdim"], [1, 2, 1, "", "eqnum"], [1, 2, 1, "", "inunitsof"], [1, 2, 1, "", "isnumeric"], [1, 3, 1, "", "name"], [1, 3, 1, "", "num"], [1, 2, 1, "", "number"], [1, 3, 1, "", "symbol"], [1, 3, 1, "", "symbol_base"]], "dipsl.DIP_UnitList": [[1, 4, 1, "", "Convert_Arbitrary"]], "dipsl.datatypes": [[2, 0, 0, "-", "DIP_Type"], [2, 0, 0, "-", "DIP_Type_Boolean"], [2, 0, 0, "-", "DIP_Type_Float"], [2, 0, 0, "-", "DIP_Type_Integer"], [2, 0, 0, "-", "DIP_Type_Number"], [2, 0, 0, "-", "DIP_Type_String"]], "dipsl.datatypes.DIP_Type": [[2, 1, 1, "", "Type"]], "dipsl.datatypes.DIP_Type.Type": [[2, 3, 1, "", "unit"], [2, 3, 1, "", "value"]], "dipsl.datatypes.DIP_Type_Boolean": [[2, 1, 1, "", "BooleanType"]], "dipsl.datatypes.DIP_Type_Boolean.BooleanType": [[2, 3, 1, "", "dtype"], [2, 3, 1, "", "value"]], "dipsl.datatypes.DIP_Type_Float": [[2, 1, 1, "", "FloatType"]], "dipsl.datatypes.DIP_Type_Float.FloatType": [[2, 3, 1, "", "dtype"], [2, 3, 1, "", "value"]], "dipsl.datatypes.DIP_Type_Integer": [[2, 1, 1, "", "IntegerType"]], "dipsl.datatypes.DIP_Type_Integer.IntegerType": [[2, 3, 1, "", "dtype"], [2, 3, 1, "", "value"]], "dipsl.datatypes.DIP_Type_Number": [[2, 1, 1, "", "NumberType"]], "dipsl.datatypes.DIP_Type_Number.NumberType": [[2, 2, 1, "", "convert"]], "dipsl.datatypes.DIP_Type_String": [[2, 1, 1, "", "StringType"]], "dipsl.datatypes.DIP_Type_String.StringType": [[2, 3, 1, "", "dtype"], [2, 3, 1, "", "value"]], "dipsl.nodes": [[3, 0, 0, "-", "DIP_Node"], [3, 0, 0, "-", "DIP_NodeBase"], [3, 0, 0, "-", "DIP_Node_Boolean"], [3, 0, 0, "-", "DIP_Node_Case"], [3, 0, 0, "-", "DIP_Node_Condition"], [3, 0, 0, "-", "DIP_Node_Constant"], [3, 0, 0, "-", "DIP_Node_Empty"], [3, 0, 0, "-", "DIP_Node_Float"], [3, 0, 0, "-", "DIP_Node_Format"], [3, 0, 0, "-", "DIP_Node_Group"], [3, 0, 0, "-", "DIP_Node_Import"], [3, 0, 0, "-", "DIP_Node_Integer"], [3, 0, 0, "-", "DIP_Node_Mod"], [3, 0, 0, "-", "DIP_Node_Option"], [3, 0, 0, "-", "DIP_Node_Source"], [3, 0, 0, "-", "DIP_Node_String"], [3, 0, 0, "-", "DIP_Node_Table"], [3, 0, 0, "-", "DIP_Node_Unit"], [3, 0, 0, "-", "DIP_Parser"]], "dipsl.nodes.DIP_Node": [[3, 1, 1, "", "Node"]], "dipsl.nodes.DIP_Node.Node": [[3, 2, 1, "", "cast_value"], [3, 3, 1, "", "condition"], [3, 3, 1, "", "constant"], [3, 2, 1, "", "inject_value"], [3, 2, 1, "", "modify_value"], [3, 2, 1, "", "parse"], [3, 2, 1, "", "set_option"], [3, 2, 1, "", "set_value"], [3, 2, 1, "", "slice_value"], [3, 3, 1, "", "value"]], "dipsl.nodes.DIP_NodeBase": [[3, 1, 1, "", "NodeBase"]], "dipsl.nodes.DIP_NodeBase.NodeBase": [[3, 3, 1, "", "code"], [3, 3, 1, "", "defined"], [3, 3, 1, "", "dimension"], [3, 3, 1, "", "dtype"], [3, 3, 1, "", "indent"], [3, 3, 1, "", "keyword"], [3, 3, 1, "", "line"], [3, 3, 1, "", "name"], [3, 3, 1, "", "options"], [3, 3, 1, "", "source"], [3, 3, 1, "", "units_raw"], [3, 3, 1, "", "value_expr"], [3, 3, 1, "", "value_raw"], [3, 3, 1, "", "value_ref"], [3, 3, 1, "", "value_slice"]], "dipsl.nodes.DIP_Node_Boolean": [[3, 1, 1, "", "BooleanNode"]], "dipsl.nodes.DIP_Node_Boolean.BooleanNode": [[3, 3, 1, "", "dtype"], [3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"], [3, 2, 1, "", "set_value"], [3, 3, 1, "", "value"]], "dipsl.nodes.DIP_Node_Case": [[3, 1, 1, "", "CaseNode"]], "dipsl.nodes.DIP_Node_Case.CaseNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Condition": [[3, 1, 1, "", "ConditionNode"]], "dipsl.nodes.DIP_Node_Condition.ConditionNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Constant": [[3, 1, 1, "", "ConstantNode"]], "dipsl.nodes.DIP_Node_Constant.ConstantNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Empty": [[3, 1, 1, "", "EmptyNode"]], "dipsl.nodes.DIP_Node_Empty.EmptyNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"]], "dipsl.nodes.DIP_Node_Float": [[3, 1, 1, "", "FloatNode"]], "dipsl.nodes.DIP_Node_Float.FloatNode": [[3, 3, 1, "", "dtype"], [3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 3, 1, "", "options"], [3, 2, 1, "", "parse"], [3, 2, 1, "", "set_value"], [3, 3, 1, "", "value"], [3, 3, 1, "", "value_expr"]], "dipsl.nodes.DIP_Node_Format": [[3, 1, 1, "", "FormatNode"]], "dipsl.nodes.DIP_Node_Format.FormatNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Group": [[3, 1, 1, "", "GroupNode"]], "dipsl.nodes.DIP_Node_Group.GroupNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"]], "dipsl.nodes.DIP_Node_Import": [[3, 1, 1, "", "ImportNode"]], "dipsl.nodes.DIP_Node_Import.ImportNode": [[3, 2, 1, "", "inject_value"], [3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Integer": [[3, 1, 1, "", "IntegerNode"]], "dipsl.nodes.DIP_Node_Integer.IntegerNode": [[3, 3, 1, "", "dtype"], [3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 3, 1, "", "options"], [3, 2, 1, "", "parse"], [3, 2, 1, "", "set_value"], [3, 3, 1, "", "value"], [3, 3, 1, "", "value_expr"]], "dipsl.nodes.DIP_Node_Mod": [[3, 1, 1, "", "ModNode"]], "dipsl.nodes.DIP_Node_Mod.ModNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Option": [[3, 1, 1, "", "OptionNode"]], "dipsl.nodes.DIP_Node_Option.OptionNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Source": [[3, 1, 1, "", "SourceNode"]], "dipsl.nodes.DIP_Node_Source.SourceNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_String": [[3, 1, 1, "", "StringNode"]], "dipsl.nodes.DIP_Node_String.StringNode": [[3, 3, 1, "", "format"], [3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 3, 1, "", "options"], [3, 2, 1, "", "parse"], [3, 2, 1, "", "set_value"]], "dipsl.nodes.DIP_Node_Table": [[3, 1, 1, "", "TableNode"]], "dipsl.nodes.DIP_Node_Table.TableNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Unit": [[3, 1, 1, "", "UnitNode"]], "dipsl.nodes.DIP_Node_Unit.UnitNode": [[3, 2, 1, "", "is_node"], [3, 3, 1, "", "keyword"], [3, 2, 1, "", "parse"]], "dipsl.nodes.DIP_Parser": [[3, 1, 1, "", "Parser"]], "dipsl.nodes.DIP_Parser.Parser": [[3, 3, 1, "", "ccode"], [3, 3, 1, "", "comment"], [3, 3, 1, "", "formating"], [3, 2, 1, "", "is_empty"], [3, 2, 1, "", "is_parsed"], [3, 2, 1, "", "kwd_case"], [3, 2, 1, "", "kwd_condition"], [3, 2, 1, "", "kwd_constant"], [3, 2, 1, "", "kwd_format"], [3, 2, 1, "", "kwd_options"], [3, 2, 1, "", "kwd_source"], [3, 2, 1, "", "kwd_unit"], [3, 3, 1, "", "parsed"], [3, 2, 1, "", "part_comment"], [3, 2, 1, "", "part_dimension"], [3, 2, 1, "", "part_equal"], [3, 2, 1, "", "part_expression"], [3, 2, 1, "", "part_format"], [3, 2, 1, "", "part_indent"], [3, 2, 1, "", "part_name"], [3, 2, 1, "", "part_reference"], [3, 2, 1, "", "part_slice"], [3, 2, 1, "", "part_type"], [3, 2, 1, "", "part_units"], [3, 2, 1, "", "part_value"]], "dipsl.pygments": [[4, 0, 0, "-", "DIP_Lexer_Schema"], [4, 0, 0, "-", "DIP_Lexer_Style"], [4, 0, 0, "-", "DIP_Lexer_Syntax"]], "dipsl.pygments.DIP_Lexer_Schema": [[4, 1, 1, "", "DIP_Lexer_Schema"]], "dipsl.pygments.DIP_Lexer_Schema.DIP_Lexer_Schema": [[4, 3, 1, "", "name"], [4, 3, 1, "", "tokens"]], "dipsl.pygments.DIP_Lexer_Style": [[4, 1, 1, "", "DIP_Lexer_Style"], [4, 4, 1, "", "pygments_monkeypatch_style"]], "dipsl.pygments.DIP_Lexer_Style.DIP_Lexer_Style": [[4, 3, 1, "", "styles"]], "dipsl.pygments.DIP_Lexer_Syntax": [[4, 1, 1, "", "DIP_Lexer_Syntax"]], "dipsl.pygments.DIP_Lexer_Syntax.DIP_Lexer_Syntax": [[4, 3, 1, "", "name"], [4, 3, 1, "", "tokens"]], "dipsl.settings": [[5, 1, 1, "", "Format"], [5, 1, 1, "", "Keyword"], [5, 1, 1, "", "Namespace"], [5, 1, 1, "", "Numeric"], [5, 1, 1, "", "Sign"]], "dipsl.settings.Format": [[5, 3, 1, "", "NODE"], [5, 3, 1, "", "TUPLE"], [5, 3, 1, "", "TYPE"], [5, 3, 1, "", "VALUE"]], "dipsl.settings.Keyword": [[5, 3, 1, "", "CASE"], [5, 3, 1, "", "CONDITION"], [5, 3, 1, "", "CONSTANT"], [5, 3, 1, "", "ELSE"], [5, 3, 1, "", "END"], [5, 3, 1, "", "FALSE"], [5, 3, 1, "", "FORMAT"], [5, 3, 1, "", "OPTIONS"], [5, 3, 1, "", "SOURCE"], [5, 3, 1, "", "TRUE"], [5, 3, 1, "", "UNIT"]], "dipsl.settings.Namespace": [[5, 3, 1, "", "NODES"], [5, 3, 1, "", "SOURCES"], [5, 3, 1, "", "UNITS"]], "dipsl.settings.Numeric": [[5, 3, 1, "", "PRECISION"]], "dipsl.settings.Sign": [[5, 3, 1, "", "CONDITION"], [5, 3, 1, "", "DEFINED"], [5, 3, 1, "", "NEGATE"], [5, 3, 1, "", "QUERY"], [5, 3, 1, "", "SEPARATOR"], [5, 3, 1, "", "VALIDATION"], [5, 3, 1, "", "VARIABLE"], [5, 3, 1, "", "WILDCARD"]], "dipsl.solvers": [[6, 0, 0, "-", "DIP_Solver_Logical"], [6, 0, 0, "-", "DIP_Solver_Numerical"], [6, 0, 0, "-", "DIP_Solver_Templates"], [6, 0, 0, "-", "DIP_Solver_Units"]], "dipsl.solvers.DIP_Solver_Logical": [[6, 1, 1, "", "LogicalSolver"]], "dipsl.solvers.DIP_Solver_Logical.LogicalSolver": [[6, 3, 1, "", "env"], [6, 2, 1, "", "solve"]], "dipsl.solvers.DIP_Solver_Numerical": [[6, 1, 1, "", "NumericalSolver"]], "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver": [[6, 3, 1, "", "env"], [6, 2, 1, "", "equal"], [6, 2, 1, "", "solve"]], "dipsl.solvers.DIP_Solver_Templates": [[6, 1, 1, "", "TemplateSolver"]], "dipsl.solvers.DIP_Solver_Templates.TemplateSolver": [[6, 3, 1, "", "env"], [6, 2, 1, "", "solve"], [6, 2, 1, "", "template"]], "dipsl.solvers.DIP_Solver_Units": [[6, 1, 1, "", "UnitSolver"]], "dipsl.solvers.DIP_Solver_Units.UnitSolver": [[6, 3, 1, "", "arbitrary"], [6, 3, 1, "", "base"], [6, 3, 1, "", "custom"], [6, 3, 1, "", "derivates"], [6, 3, 1, "", "nbase"], [6, 3, 1, "", "npbase"], [6, 3, 1, "", "prefixes"], [6, 2, 1, "", "solve"], [6, 2, 1, "", "unit"], [6, 3, 1, "", "units"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "content": [0, 1, 2, 3, 4, 5, 6, 8, 9, 13, 16], "dipsl": [1, 2, 3, 4, 5, 6, 7], "packag": [1, 2, 3, 4, 5, 6], "subpackag": 1, "submodul": [1, 2, 3, 4, 6], "dip_environ": 1, "modul": [1, 2, 3, 4, 5, 6], "dip_main": 1, "dip_unit": 1, "dip_unitlist": 1, "datatyp": 2, "dip_typ": 2, "dip_type_boolean": 2, "dip_type_float": 2, "dip_type_integ": 2, "dip_type_numb": 2, "dip_type_str": 2, "node": [3, 19], "dip_nod": 3, "dip_nodebas": 3, "dip_node_boolean": 3, "dip_node_cas": 3, "dip_node_condit": 3, "dip_node_const": 3, "dip_node_empti": 3, "dip_node_float": 3, "dip_node_format": 3, "dip_node_group": 3, "dip_node_import": 3, "dip_node_integ": 3, "dip_node_mod": 3, "dip_node_opt": 3, "dip_node_sourc": 3, "dip_node_str": 3, "dip_node_t": 3, "dip_node_unit": 3, "dip_pars": 3, "pygment": [4, 13], "dip_lexer_schema": 4, "dip_lexer_styl": 4, "dip_lexer_syntax": 4, "set": 5, "solver": 6, "dip_solver_log": 6, "dip_solver_numer": 6, "dip_solver_templ": 6, "dip_solver_unit": 6, "pydipsl": 8, "indic": 8, "tabl": [8, 23], "introduct": 9, "about": 10, "dip": [10, 11], "exampl": 11, "us": 11, "pars": [11, 18], "code": 11, "get": 11, "data": 11, "definit": [11, 19], "templat": [11, 18], "instal": 12, "lexer": 13, "schema": 14, "highlit": [14, 15], "syntax": [15, 16], "condit": [17, 22], "express": 18, "input": 18, "valu": [18, 23], "logic": 18, "oper": [18, 21], "parenthesi": 18, "comparison": 18, "singl": 18, "numer": 18, "basic": 18, "parenthes": 18, "modif": 19, "declar": 19, "hierarchi": 19, "refer": 20, "import": 20, "inject": 20, "unit": 21, "base": 21, "prefix": 21, "deriv": 21, "si": 21, "cg": 21, "other": 21, "natur": 21, "dimensionless": 21, "custom": 21, "valid": 22, "option": 22, "format": 22, "constant": 22, "scalar": 23, "arrai": 23, "block": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Contents:": [[0, null], [8, null], [9, null], [13, null], [16, null]], "dipsl package": [[1, "dipsl-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [6, "submodules"]], "dipsl.DIP_Environment module": [[1, "module-dipsl.DIP_Environment"]], "dipsl.DIP_Main module": [[1, "module-dipsl.DIP_Main"]], "dipsl.DIP_Unit module": [[1, "module-dipsl.DIP_Unit"]], "dipsl.DIP_UnitList module": [[1, "module-dipsl.DIP_UnitList"]], "Module contents": [[1, "module-dipsl"], [2, "module-dipsl.datatypes"], [3, "module-dipsl.nodes"], [4, "module-dipsl.pygments"], [5, "module-dipsl.settings"], [6, "module-dipsl.solvers"]], "dipsl.datatypes package": [[2, "dipsl-datatypes-package"]], "dipsl.datatypes.DIP_Type module": [[2, "module-dipsl.datatypes.DIP_Type"]], "dipsl.datatypes.DIP_Type_Boolean module": [[2, "module-dipsl.datatypes.DIP_Type_Boolean"]], "dipsl.datatypes.DIP_Type_Float module": [[2, "module-dipsl.datatypes.DIP_Type_Float"]], "dipsl.datatypes.DIP_Type_Integer module": [[2, "module-dipsl.datatypes.DIP_Type_Integer"]], "dipsl.datatypes.DIP_Type_Number module": [[2, "module-dipsl.datatypes.DIP_Type_Number"]], "dipsl.datatypes.DIP_Type_String module": [[2, "module-dipsl.datatypes.DIP_Type_String"]], "dipsl.nodes package": [[3, "dipsl-nodes-package"]], "dipsl.nodes.DIP_Node module": [[3, "module-dipsl.nodes.DIP_Node"]], "dipsl.nodes.DIP_NodeBase module": [[3, "module-dipsl.nodes.DIP_NodeBase"]], "dipsl.nodes.DIP_Node_Boolean module": [[3, "module-dipsl.nodes.DIP_Node_Boolean"]], "dipsl.nodes.DIP_Node_Case module": [[3, "module-dipsl.nodes.DIP_Node_Case"]], "dipsl.nodes.DIP_Node_Condition module": [[3, "module-dipsl.nodes.DIP_Node_Condition"]], "dipsl.nodes.DIP_Node_Constant module": [[3, "module-dipsl.nodes.DIP_Node_Constant"]], "dipsl.nodes.DIP_Node_Empty module": [[3, "module-dipsl.nodes.DIP_Node_Empty"]], "dipsl.nodes.DIP_Node_Float module": [[3, "module-dipsl.nodes.DIP_Node_Float"]], "dipsl.nodes.DIP_Node_Format module": [[3, "module-dipsl.nodes.DIP_Node_Format"]], "dipsl.nodes.DIP_Node_Group module": [[3, "module-dipsl.nodes.DIP_Node_Group"]], "dipsl.nodes.DIP_Node_Import module": [[3, "module-dipsl.nodes.DIP_Node_Import"]], "dipsl.nodes.DIP_Node_Integer module": [[3, "module-dipsl.nodes.DIP_Node_Integer"]], "dipsl.nodes.DIP_Node_Mod module": [[3, "module-dipsl.nodes.DIP_Node_Mod"]], "dipsl.nodes.DIP_Node_Option module": [[3, "module-dipsl.nodes.DIP_Node_Option"]], "dipsl.nodes.DIP_Node_Source module": [[3, "module-dipsl.nodes.DIP_Node_Source"]], "dipsl.nodes.DIP_Node_String module": [[3, "module-dipsl.nodes.DIP_Node_String"]], "dipsl.nodes.DIP_Node_Table module": [[3, "module-dipsl.nodes.DIP_Node_Table"]], "dipsl.nodes.DIP_Node_Unit module": [[3, "module-dipsl.nodes.DIP_Node_Unit"]], "dipsl.nodes.DIP_Parser module": [[3, "module-dipsl.nodes.DIP_Parser"]], "dipsl.pygments package": [[4, "dipsl-pygments-package"]], "dipsl.pygments.DIP_Lexer_Schema module": [[4, "module-dipsl.pygments.DIP_Lexer_Schema"]], "dipsl.pygments.DIP_Lexer_Style module": [[4, "module-dipsl.pygments.DIP_Lexer_Style"]], "dipsl.pygments.DIP_Lexer_Syntax module": [[4, "module-dipsl.pygments.DIP_Lexer_Syntax"]], "dipsl.settings package": [[5, "dipsl-settings-package"]], "dipsl.solvers package": [[6, "dipsl-solvers-package"]], "dipsl.solvers.DIP_Solver_Logical module": [[6, "module-dipsl.solvers.DIP_Solver_Logical"]], "dipsl.solvers.DIP_Solver_Numerical module": [[6, "module-dipsl.solvers.DIP_Solver_Numerical"]], "dipsl.solvers.DIP_Solver_Templates module": [[6, "module-dipsl.solvers.DIP_Solver_Templates"]], "dipsl.solvers.DIP_Solver_Units module": [[6, "module-dipsl.solvers.DIP_Solver_Units"]], "dipsl": [[7, "dipsl"]], "PyDIPSL": [[8, "pydipsl"]], "Indices and tables": [[8, "indices-and-tables"]], "Introduction": [[9, "introduction"]], "About DIP": [[10, "about-dip"]], "Example of use": [[11, "example-of-use"]], "Parsing DIP code": [[11, "parsing-dip-code"]], "Getting parsed data": [[11, "getting-parsed-data"]], "Definitions": [[11, "definitions"]], "Templates": [[11, "templates"], [18, "templates"]], "Installation": [[12, "installation"]], "Pygments lexer": [[13, "pygments-lexer"]], "Schema highliter": [[14, "schema-highliter"]], "Syntax highliter": [[15, "syntax-highliter"]], "Syntax": [[16, "syntax"]], "Conditions": [[17, "conditions"]], "Expressions": [[18, "expressions"]], "Input values": [[18, "id2"]], "Logical": [[18, "logical"]], "Logical operators": [[18, "id3"]], "Parenthesis operator": [[18, "id4"]], "Comparison operators": [[18, "id5"]], "Single value operators": [[18, "id6"]], "Numerical": [[18, "numerical"]], "Basic operations": [[18, "id7"]], "Parentheses operators": [[18, "id8"]], "Parsing operators": [[18, "id9"]], "Nodes": [[19, "nodes"]], "Definition": [[19, "definition"]], "Modification": [[19, "modification"]], "Declaration": [[19, "declaration"]], "Hierarchy": [[19, "hierarchy"]], "References": [[20, "references"]], "Imports": [[20, "imports"]], "Injections": [[20, "injections"]], "Units": [[21, "units"]], "Base units": [[21, "base-units"], [21, "id1"]], "Prefixes": [[21, "prefixes"]], "Unit prefixes": [[21, "id2"]], "Derived units": [[21, "derived-units"]], "Unit operators": [[21, "id3"]], "Derived SI units": [[21, "id4"]], "Derived CGS units": [[21, "id5"]], "Other derived units": [[21, "id6"]], "Natural units": [[21, "id7"]], "Dimensionless units": [[21, "id8"]], "Custom units": [[21, "custom-units"]], "Validation": [[22, "validation"]], "Options": [[22, "options"]], "Condition": [[22, "condition"]], "Format": [[22, "format"]], "Constants": [[22, "constants"]], "Values": [[23, "values"]], "Scalars": [[23, "scalars"]], "Arrays": [[23, "arrays"]], "Blocks": [[23, "blocks"]], "Tables": [[23, "tables"]]}, "indexentries": {"convert_arbitrary() (in module dipsl.dip_unitlist)": [[1, "dipsl.DIP_UnitList.Convert_Arbitrary"]], "dip (class in dipsl.dip_main)": [[1, "dipsl.DIP_Main.DIP"]], "environment (class in dipsl.dip_environment)": [[1, "dipsl.DIP_Environment.Environment"]], "unit (class in dipsl.dip_unit)": [[1, "dipsl.DIP_Unit.Unit"]], "add_source() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.add_source"]], "add_source() (dipsl.dip_main.dip method)": [[1, "dipsl.DIP_Main.DIP.add_source"]], "add_unit() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.add_unit"]], "add_unit() (dipsl.dip_main.dip method)": [[1, "dipsl.DIP_Main.DIP.add_unit"]], "arbitrary (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.arbitrary"]], "autoref (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.autoref"]], "base (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.base"]], "case_counts (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.case_counts"]], "case_names (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.case_names"]], "copy() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.copy"]], "data() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.data"]], "dfn (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.dfn"]], "dimension() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.dimension"]], "dipsl": [[1, "module-dipsl"]], "dipsl.dip_environment": [[1, "module-dipsl.DIP_Environment"]], "dipsl.dip_main": [[1, "module-dipsl.DIP_Main"]], "dipsl.dip_unit": [[1, "module-dipsl.DIP_Unit"]], "dipsl.dip_unitlist": [[1, "module-dipsl.DIP_UnitList"]], "env (dipsl.dip_main.dip attribute)": [[1, "dipsl.DIP_Main.DIP.env"]], "eqdim() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.eqdim"]], "eqnum() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.eqnum"]], "from_file() (dipsl.dip_main.dip method)": [[1, "dipsl.DIP_Main.DIP.from_file"]], "from_string() (dipsl.dip_main.dip method)": [[1, "dipsl.DIP_Main.DIP.from_string"]], "inunitsof() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.inunitsof"]], "is_case() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.is_case"]], "isnumeric() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.isnumeric"]], "lines (dipsl.dip_main.dip attribute)": [[1, "dipsl.DIP_Main.DIP.lines"]], "module": [[1, "module-dipsl"], [1, "module-dipsl.DIP_Environment"], [1, "module-dipsl.DIP_Main"], [1, "module-dipsl.DIP_Unit"], [1, "module-dipsl.DIP_UnitList"], [2, "module-dipsl.datatypes"], [2, "module-dipsl.datatypes.DIP_Type"], [2, "module-dipsl.datatypes.DIP_Type_Boolean"], [2, "module-dipsl.datatypes.DIP_Type_Float"], [2, "module-dipsl.datatypes.DIP_Type_Integer"], [2, "module-dipsl.datatypes.DIP_Type_Number"], [2, "module-dipsl.datatypes.DIP_Type_String"], [3, "module-dipsl.nodes"], [3, "module-dipsl.nodes.DIP_Node"], [3, "module-dipsl.nodes.DIP_NodeBase"], [3, "module-dipsl.nodes.DIP_Node_Boolean"], [3, "module-dipsl.nodes.DIP_Node_Case"], [3, "module-dipsl.nodes.DIP_Node_Condition"], [3, "module-dipsl.nodes.DIP_Node_Constant"], [3, "module-dipsl.nodes.DIP_Node_Empty"], [3, "module-dipsl.nodes.DIP_Node_Float"], [3, "module-dipsl.nodes.DIP_Node_Format"], [3, "module-dipsl.nodes.DIP_Node_Group"], [3, "module-dipsl.nodes.DIP_Node_Import"], [3, "module-dipsl.nodes.DIP_Node_Integer"], [3, "module-dipsl.nodes.DIP_Node_Mod"], [3, "module-dipsl.nodes.DIP_Node_Option"], [3, "module-dipsl.nodes.DIP_Node_Source"], [3, "module-dipsl.nodes.DIP_Node_String"], [3, "module-dipsl.nodes.DIP_Node_Table"], [3, "module-dipsl.nodes.DIP_Node_Unit"], [3, "module-dipsl.nodes.DIP_Parser"], [4, "module-dipsl.pygments"], [4, "module-dipsl.pygments.DIP_Lexer_Schema"], [4, "module-dipsl.pygments.DIP_Lexer_Style"], [4, "module-dipsl.pygments.DIP_Lexer_Syntax"], [5, "module-dipsl.settings"], [6, "module-dipsl.solvers"], [6, "module-dipsl.solvers.DIP_Solver_Logical"], [6, "module-dipsl.solvers.DIP_Solver_Numerical"], [6, "module-dipsl.solvers.DIP_Solver_Templates"], [6, "module-dipsl.solvers.DIP_Solver_Units"]], "name (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.name"]], "nodes (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.nodes"]], "num (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.num"]], "number() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.number"]], "parent_indents (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.parent_indents"]], "parent_names (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.parent_names"]], "parse() (dipsl.dip_main.dip method)": [[1, "dipsl.DIP_Main.DIP.parse"]], "pop_node() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.pop_node"]], "prepare_node() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.prepare_node"]], "prepend_nodes() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.prepend_nodes"]], "query() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.query"]], "request() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.request"]], "solve_case() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.solve_case"]], "source (dipsl.dip_main.dip attribute)": [[1, "dipsl.DIP_Main.DIP.source"]], "sources (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.sources"]], "symbol (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.symbol"]], "symbol_base (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.symbol_base"]], "units (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.units"]], "update_hierarchy() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.update_hierarchy"]], "booleantype (class in dipsl.datatypes.dip_type_boolean)": [[2, "dipsl.datatypes.DIP_Type_Boolean.BooleanType"]], "floattype (class in dipsl.datatypes.dip_type_float)": [[2, "dipsl.datatypes.DIP_Type_Float.FloatType"]], "integertype (class in dipsl.datatypes.dip_type_integer)": [[2, "dipsl.datatypes.DIP_Type_Integer.IntegerType"]], "numbertype (class in dipsl.datatypes.dip_type_number)": [[2, "dipsl.datatypes.DIP_Type_Number.NumberType"]], "stringtype (class in dipsl.datatypes.dip_type_string)": [[2, "dipsl.datatypes.DIP_Type_String.StringType"]], "type (class in dipsl.datatypes.dip_type)": [[2, "dipsl.datatypes.DIP_Type.Type"]], "convert() (dipsl.datatypes.dip_type_number.numbertype method)": [[2, "dipsl.datatypes.DIP_Type_Number.NumberType.convert"]], "dipsl.datatypes": [[2, "module-dipsl.datatypes"]], "dipsl.datatypes.dip_type": [[2, "module-dipsl.datatypes.DIP_Type"]], "dipsl.datatypes.dip_type_boolean": [[2, "module-dipsl.datatypes.DIP_Type_Boolean"]], "dipsl.datatypes.dip_type_float": [[2, "module-dipsl.datatypes.DIP_Type_Float"]], "dipsl.datatypes.dip_type_integer": [[2, "module-dipsl.datatypes.DIP_Type_Integer"]], "dipsl.datatypes.dip_type_number": [[2, "module-dipsl.datatypes.DIP_Type_Number"]], "dipsl.datatypes.dip_type_string": [[2, "module-dipsl.datatypes.DIP_Type_String"]], "dtype (dipsl.datatypes.dip_type_boolean.booleantype attribute)": [[2, "dipsl.datatypes.DIP_Type_Boolean.BooleanType.dtype"]], "dtype (dipsl.datatypes.dip_type_float.floattype attribute)": [[2, "dipsl.datatypes.DIP_Type_Float.FloatType.dtype"]], "dtype (dipsl.datatypes.dip_type_integer.integertype attribute)": [[2, "dipsl.datatypes.DIP_Type_Integer.IntegerType.dtype"]], "dtype (dipsl.datatypes.dip_type_string.stringtype attribute)": [[2, "dipsl.datatypes.DIP_Type_String.StringType.dtype"]], "unit (dipsl.datatypes.dip_type.type attribute)": [[2, "dipsl.datatypes.DIP_Type.Type.unit"]], "value (dipsl.datatypes.dip_type.type attribute)": [[2, "dipsl.datatypes.DIP_Type.Type.value"]], "value (dipsl.datatypes.dip_type_boolean.booleantype attribute)": [[2, "dipsl.datatypes.DIP_Type_Boolean.BooleanType.value"]], "value (dipsl.datatypes.dip_type_float.floattype attribute)": [[2, "dipsl.datatypes.DIP_Type_Float.FloatType.value"]], "value (dipsl.datatypes.dip_type_integer.integertype attribute)": [[2, "dipsl.datatypes.DIP_Type_Integer.IntegerType.value"]], "value (dipsl.datatypes.dip_type_string.stringtype attribute)": [[2, "dipsl.datatypes.DIP_Type_String.StringType.value"]], "booleannode (class in dipsl.nodes.dip_node_boolean)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode"]], "casenode (class in dipsl.nodes.dip_node_case)": [[3, "dipsl.nodes.DIP_Node_Case.CaseNode"]], "conditionnode (class in dipsl.nodes.dip_node_condition)": [[3, "dipsl.nodes.DIP_Node_Condition.ConditionNode"]], "constantnode (class in dipsl.nodes.dip_node_constant)": [[3, "dipsl.nodes.DIP_Node_Constant.ConstantNode"]], "emptynode (class in dipsl.nodes.dip_node_empty)": [[3, "dipsl.nodes.DIP_Node_Empty.EmptyNode"]], "floatnode (class in dipsl.nodes.dip_node_float)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode"]], "formatnode (class in dipsl.nodes.dip_node_format)": [[3, "dipsl.nodes.DIP_Node_Format.FormatNode"]], "groupnode (class in dipsl.nodes.dip_node_group)": [[3, "dipsl.nodes.DIP_Node_Group.GroupNode"]], "importnode (class in dipsl.nodes.dip_node_import)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode"]], "integernode (class in dipsl.nodes.dip_node_integer)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode"]], "modnode (class in dipsl.nodes.dip_node_mod)": [[3, "dipsl.nodes.DIP_Node_Mod.ModNode"]], "node (class in dipsl.nodes.dip_node)": [[3, "dipsl.nodes.DIP_Node.Node"]], "nodebase (class in dipsl.nodes.dip_nodebase)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase"]], "optionnode (class in dipsl.nodes.dip_node_option)": [[3, "dipsl.nodes.DIP_Node_Option.OptionNode"]], "parser (class in dipsl.nodes.dip_parser)": [[3, "dipsl.nodes.DIP_Parser.Parser"]], "sourcenode (class in dipsl.nodes.dip_node_source)": [[3, "dipsl.nodes.DIP_Node_Source.SourceNode"]], "stringnode (class in dipsl.nodes.dip_node_string)": [[3, "dipsl.nodes.DIP_Node_String.StringNode"]], "tablenode (class in dipsl.nodes.dip_node_table)": [[3, "dipsl.nodes.DIP_Node_Table.TableNode"]], "unitnode (class in dipsl.nodes.dip_node_unit)": [[3, "dipsl.nodes.DIP_Node_Unit.UnitNode"]], "cast_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.cast_value"]], "ccode (dipsl.nodes.dip_parser.parser attribute)": [[3, "dipsl.nodes.DIP_Parser.Parser.ccode"]], "code (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.code"]], "comment (dipsl.nodes.dip_parser.parser attribute)": [[3, "dipsl.nodes.DIP_Parser.Parser.comment"]], "condition (dipsl.nodes.dip_node.node attribute)": [[3, "dipsl.nodes.DIP_Node.Node.condition"]], "constant (dipsl.nodes.dip_node.node attribute)": [[3, "dipsl.nodes.DIP_Node.Node.constant"]], "defined (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.defined"]], "dimension (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.dimension"]], "dipsl.nodes": [[3, "module-dipsl.nodes"]], "dipsl.nodes.dip_node": [[3, "module-dipsl.nodes.DIP_Node"]], "dipsl.nodes.dip_nodebase": [[3, "module-dipsl.nodes.DIP_NodeBase"]], "dipsl.nodes.dip_node_boolean": [[3, "module-dipsl.nodes.DIP_Node_Boolean"]], "dipsl.nodes.dip_node_case": [[3, "module-dipsl.nodes.DIP_Node_Case"]], "dipsl.nodes.dip_node_condition": [[3, "module-dipsl.nodes.DIP_Node_Condition"]], "dipsl.nodes.dip_node_constant": [[3, "module-dipsl.nodes.DIP_Node_Constant"]], "dipsl.nodes.dip_node_empty": [[3, "module-dipsl.nodes.DIP_Node_Empty"]], "dipsl.nodes.dip_node_float": [[3, "module-dipsl.nodes.DIP_Node_Float"]], "dipsl.nodes.dip_node_format": [[3, "module-dipsl.nodes.DIP_Node_Format"]], "dipsl.nodes.dip_node_group": [[3, "module-dipsl.nodes.DIP_Node_Group"]], "dipsl.nodes.dip_node_import": [[3, "module-dipsl.nodes.DIP_Node_Import"]], "dipsl.nodes.dip_node_integer": [[3, "module-dipsl.nodes.DIP_Node_Integer"]], "dipsl.nodes.dip_node_mod": [[3, "module-dipsl.nodes.DIP_Node_Mod"]], "dipsl.nodes.dip_node_option": [[3, "module-dipsl.nodes.DIP_Node_Option"]], "dipsl.nodes.dip_node_source": [[3, "module-dipsl.nodes.DIP_Node_Source"]], "dipsl.nodes.dip_node_string": [[3, "module-dipsl.nodes.DIP_Node_String"]], "dipsl.nodes.dip_node_table": [[3, "module-dipsl.nodes.DIP_Node_Table"]], "dipsl.nodes.dip_node_unit": [[3, "module-dipsl.nodes.DIP_Node_Unit"]], "dipsl.nodes.dip_parser": [[3, "module-dipsl.nodes.DIP_Parser"]], "dtype (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.dtype"]], "dtype (dipsl.nodes.dip_node_boolean.booleannode attribute)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.dtype"]], "dtype (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.dtype"]], "dtype (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.dtype"]], "format (dipsl.nodes.dip_node_string.stringnode attribute)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.format"]], "formating (dipsl.nodes.dip_parser.parser attribute)": [[3, "dipsl.nodes.DIP_Parser.Parser.formating"]], "indent (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.indent"]], "inject_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.inject_value"]], "inject_value() (dipsl.nodes.dip_node_import.importnode method)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode.inject_value"]], "is_empty() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.is_empty"]], "is_node() (dipsl.nodes.dip_node_boolean.booleannode static method)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.is_node"]], "is_node() (dipsl.nodes.dip_node_case.casenode static method)": [[3, "dipsl.nodes.DIP_Node_Case.CaseNode.is_node"]], "is_node() (dipsl.nodes.dip_node_condition.conditionnode static method)": [[3, "dipsl.nodes.DIP_Node_Condition.ConditionNode.is_node"]], "is_node() (dipsl.nodes.dip_node_constant.constantnode static method)": [[3, "dipsl.nodes.DIP_Node_Constant.ConstantNode.is_node"]], "is_node() (dipsl.nodes.dip_node_empty.emptynode static method)": [[3, "dipsl.nodes.DIP_Node_Empty.EmptyNode.is_node"]], "is_node() (dipsl.nodes.dip_node_float.floatnode static method)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.is_node"]], "is_node() (dipsl.nodes.dip_node_format.formatnode static method)": [[3, "dipsl.nodes.DIP_Node_Format.FormatNode.is_node"]], "is_node() (dipsl.nodes.dip_node_group.groupnode static method)": [[3, "dipsl.nodes.DIP_Node_Group.GroupNode.is_node"]], "is_node() (dipsl.nodes.dip_node_import.importnode method)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode.is_node"]], "is_node() (dipsl.nodes.dip_node_integer.integernode static method)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.is_node"]], "is_node() (dipsl.nodes.dip_node_mod.modnode static method)": [[3, "dipsl.nodes.DIP_Node_Mod.ModNode.is_node"]], "is_node() (dipsl.nodes.dip_node_option.optionnode static method)": [[3, "dipsl.nodes.DIP_Node_Option.OptionNode.is_node"]], "is_node() (dipsl.nodes.dip_node_source.sourcenode static method)": [[3, "dipsl.nodes.DIP_Node_Source.SourceNode.is_node"]], "is_node() (dipsl.nodes.dip_node_string.stringnode static method)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.is_node"]], "is_node() (dipsl.nodes.dip_node_table.tablenode static method)": [[3, "dipsl.nodes.DIP_Node_Table.TableNode.is_node"]], "is_node() (dipsl.nodes.dip_node_unit.unitnode static method)": [[3, "dipsl.nodes.DIP_Node_Unit.UnitNode.is_node"]], "is_parsed() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.is_parsed"]], "keyword (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.keyword"]], "keyword (dipsl.nodes.dip_node_boolean.booleannode attribute)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.keyword"]], "keyword (dipsl.nodes.dip_node_case.casenode attribute)": [[3, "dipsl.nodes.DIP_Node_Case.CaseNode.keyword"]], "keyword (dipsl.nodes.dip_node_condition.conditionnode attribute)": [[3, "dipsl.nodes.DIP_Node_Condition.ConditionNode.keyword"]], "keyword (dipsl.nodes.dip_node_constant.constantnode attribute)": [[3, "dipsl.nodes.DIP_Node_Constant.ConstantNode.keyword"]], "keyword (dipsl.nodes.dip_node_empty.emptynode attribute)": [[3, "dipsl.nodes.DIP_Node_Empty.EmptyNode.keyword"]], "keyword (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.keyword"]], "keyword (dipsl.nodes.dip_node_format.formatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Format.FormatNode.keyword"]], "keyword (dipsl.nodes.dip_node_group.groupnode attribute)": [[3, "dipsl.nodes.DIP_Node_Group.GroupNode.keyword"]], "keyword (dipsl.nodes.dip_node_import.importnode attribute)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode.keyword"]], "keyword (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.keyword"]], "keyword (dipsl.nodes.dip_node_mod.modnode attribute)": [[3, "dipsl.nodes.DIP_Node_Mod.ModNode.keyword"]], "keyword (dipsl.nodes.dip_node_option.optionnode attribute)": [[3, "dipsl.nodes.DIP_Node_Option.OptionNode.keyword"]], "keyword (dipsl.nodes.dip_node_source.sourcenode attribute)": [[3, "dipsl.nodes.DIP_Node_Source.SourceNode.keyword"]], "keyword (dipsl.nodes.dip_node_string.stringnode attribute)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.keyword"]], "keyword (dipsl.nodes.dip_node_table.tablenode attribute)": [[3, "dipsl.nodes.DIP_Node_Table.TableNode.keyword"]], "keyword (dipsl.nodes.dip_node_unit.unitnode attribute)": [[3, "dipsl.nodes.DIP_Node_Unit.UnitNode.keyword"]], "kwd_case() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_case"]], "kwd_condition() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_condition"]], "kwd_constant() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_constant"]], "kwd_format() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_format"]], "kwd_options() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_options"]], "kwd_source() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_source"]], "kwd_unit() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_unit"]], "line (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.line"]], "modify_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.modify_value"]], "name (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.name"]], "options (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.options"]], "options (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.options"]], "options (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.options"]], "options (dipsl.nodes.dip_node_string.stringnode attribute)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.options"]], "parse() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.parse"]], "parse() (dipsl.nodes.dip_node_boolean.booleannode method)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.parse"]], "parse() (dipsl.nodes.dip_node_case.casenode method)": [[3, "dipsl.nodes.DIP_Node_Case.CaseNode.parse"]], "parse() (dipsl.nodes.dip_node_condition.conditionnode method)": [[3, "dipsl.nodes.DIP_Node_Condition.ConditionNode.parse"]], "parse() (dipsl.nodes.dip_node_constant.constantnode method)": [[3, "dipsl.nodes.DIP_Node_Constant.ConstantNode.parse"]], "parse() (dipsl.nodes.dip_node_float.floatnode method)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.parse"]], "parse() (dipsl.nodes.dip_node_format.formatnode method)": [[3, "dipsl.nodes.DIP_Node_Format.FormatNode.parse"]], "parse() (dipsl.nodes.dip_node_import.importnode method)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode.parse"]], "parse() (dipsl.nodes.dip_node_integer.integernode method)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.parse"]], "parse() (dipsl.nodes.dip_node_mod.modnode method)": [[3, "dipsl.nodes.DIP_Node_Mod.ModNode.parse"]], "parse() (dipsl.nodes.dip_node_option.optionnode method)": [[3, "dipsl.nodes.DIP_Node_Option.OptionNode.parse"]], "parse() (dipsl.nodes.dip_node_source.sourcenode method)": [[3, "dipsl.nodes.DIP_Node_Source.SourceNode.parse"]], "parse() (dipsl.nodes.dip_node_string.stringnode method)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.parse"]], "parse() (dipsl.nodes.dip_node_table.tablenode method)": [[3, "dipsl.nodes.DIP_Node_Table.TableNode.parse"]], "parse() (dipsl.nodes.dip_node_unit.unitnode method)": [[3, "dipsl.nodes.DIP_Node_Unit.UnitNode.parse"]], "parsed (dipsl.nodes.dip_parser.parser attribute)": [[3, "dipsl.nodes.DIP_Parser.Parser.parsed"]], "part_comment() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_comment"]], "part_dimension() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_dimension"]], "part_equal() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_equal"]], "part_expression() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_expression"]], "part_format() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_format"]], "part_indent() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_indent"]], "part_name() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_name"]], "part_reference() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_reference"]], "part_slice() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_slice"]], "part_type() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_type"]], "part_units() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_units"]], "part_value() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_value"]], "set_option() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.set_option"]], "set_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.set_value"]], "set_value() (dipsl.nodes.dip_node_boolean.booleannode method)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.set_value"]], "set_value() (dipsl.nodes.dip_node_float.floatnode method)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.set_value"]], "set_value() (dipsl.nodes.dip_node_integer.integernode method)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.set_value"]], "set_value() (dipsl.nodes.dip_node_string.stringnode method)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.set_value"]], "slice_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.slice_value"]], "source (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.source"]], "units_raw (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.units_raw"]], "value (dipsl.nodes.dip_node.node attribute)": [[3, "dipsl.nodes.DIP_Node.Node.value"]], "value (dipsl.nodes.dip_node_boolean.booleannode attribute)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.value"]], "value (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.value"]], "value (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.value"]], "value_expr (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.value_expr"]], "value_expr (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.value_expr"]], "value_expr (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.value_expr"]], "value_raw (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.value_raw"]], "value_ref (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.value_ref"]], "value_slice (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.value_slice"]], "dip_lexer_schema (class in dipsl.pygments.dip_lexer_schema)": [[4, "dipsl.pygments.DIP_Lexer_Schema.DIP_Lexer_Schema"]], "dip_lexer_style (class in dipsl.pygments.dip_lexer_style)": [[4, "dipsl.pygments.DIP_Lexer_Style.DIP_Lexer_Style"]], "dip_lexer_syntax (class in dipsl.pygments.dip_lexer_syntax)": [[4, "dipsl.pygments.DIP_Lexer_Syntax.DIP_Lexer_Syntax"]], "dipsl.pygments": [[4, "module-dipsl.pygments"]], "dipsl.pygments.dip_lexer_schema": [[4, "module-dipsl.pygments.DIP_Lexer_Schema"]], "dipsl.pygments.dip_lexer_style": [[4, "module-dipsl.pygments.DIP_Lexer_Style"]], "dipsl.pygments.dip_lexer_syntax": [[4, "module-dipsl.pygments.DIP_Lexer_Syntax"]], "name (dipsl.pygments.dip_lexer_schema.dip_lexer_schema attribute)": [[4, "dipsl.pygments.DIP_Lexer_Schema.DIP_Lexer_Schema.name"]], "name (dipsl.pygments.dip_lexer_syntax.dip_lexer_syntax attribute)": [[4, "dipsl.pygments.DIP_Lexer_Syntax.DIP_Lexer_Syntax.name"]], "pygments_monkeypatch_style() (in module dipsl.pygments.dip_lexer_style)": [[4, "dipsl.pygments.DIP_Lexer_Style.pygments_monkeypatch_style"]], "styles (dipsl.pygments.dip_lexer_style.dip_lexer_style attribute)": [[4, "dipsl.pygments.DIP_Lexer_Style.DIP_Lexer_Style.styles"]], "tokens (dipsl.pygments.dip_lexer_schema.dip_lexer_schema attribute)": [[4, "dipsl.pygments.DIP_Lexer_Schema.DIP_Lexer_Schema.tokens"]], "tokens (dipsl.pygments.dip_lexer_syntax.dip_lexer_syntax attribute)": [[4, "dipsl.pygments.DIP_Lexer_Syntax.DIP_Lexer_Syntax.tokens"]], "case (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.CASE"]], "condition (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.CONDITION"]], "condition (dipsl.settings.sign attribute)": [[5, "dipsl.settings.Sign.CONDITION"]], "constant (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.CONSTANT"]], "defined (dipsl.settings.sign attribute)": [[5, "dipsl.settings.Sign.DEFINED"]], "else (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.ELSE"]], "end (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.END"]], "false (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.FALSE"]], "format (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.FORMAT"]], "format (class in dipsl.settings)": [[5, "dipsl.settings.Format"]], "keyword (class in dipsl.settings)": [[5, "dipsl.settings.Keyword"]], "negate (dipsl.settings.sign attribute)": [[5, "dipsl.settings.Sign.NEGATE"]], "node (dipsl.settings.format attribute)": [[5, "dipsl.settings.Format.NODE"]], "nodes (dipsl.settings.namespace attribute)": [[5, "dipsl.settings.Namespace.NODES"]], "namespace (class in dipsl.settings)": [[5, "dipsl.settings.Namespace"]], "numeric (class in dipsl.settings)": [[5, "dipsl.settings.Numeric"]], "options (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.OPTIONS"]], "precision (dipsl.settings.numeric attribute)": [[5, "dipsl.settings.Numeric.PRECISION"]], "query (dipsl.settings.sign attribute)": [[5, "dipsl.settings.Sign.QUERY"]], "separator (dipsl.settings.sign attribute)": [[5, "dipsl.settings.Sign.SEPARATOR"]], "source (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.SOURCE"]], "sources (dipsl.settings.namespace attribute)": [[5, "dipsl.settings.Namespace.SOURCES"]], "sign (class in dipsl.settings)": [[5, "dipsl.settings.Sign"]], "true (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.TRUE"]], "tuple (dipsl.settings.format attribute)": [[5, "dipsl.settings.Format.TUPLE"]], "type (dipsl.settings.format attribute)": [[5, "dipsl.settings.Format.TYPE"]], "unit (dipsl.settings.keyword attribute)": [[5, "dipsl.settings.Keyword.UNIT"]], "units (dipsl.settings.namespace attribute)": [[5, "dipsl.settings.Namespace.UNITS"]], "validation (dipsl.settings.sign attribute)": [[5, "dipsl.settings.Sign.VALIDATION"]], "value (dipsl.settings.format attribute)": [[5, "dipsl.settings.Format.VALUE"]], "variable (dipsl.settings.sign attribute)": [[5, "dipsl.settings.Sign.VARIABLE"]], "wildcard (dipsl.settings.sign attribute)": [[5, "dipsl.settings.Sign.WILDCARD"]], "dipsl.settings": [[5, "module-dipsl.settings"]], "logicalsolver (class in dipsl.solvers.dip_solver_logical)": [[6, "dipsl.solvers.DIP_Solver_Logical.LogicalSolver"]], "numericalsolver (class in dipsl.solvers.dip_solver_numerical)": [[6, "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver"]], "templatesolver (class in dipsl.solvers.dip_solver_templates)": [[6, "dipsl.solvers.DIP_Solver_Templates.TemplateSolver"]], "unitsolver (class in dipsl.solvers.dip_solver_units)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver"]], "arbitrary (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.arbitrary"]], "base (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.base"]], "custom (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.custom"]], "derivates (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.derivates"]], "dipsl.solvers": [[6, "module-dipsl.solvers"]], "dipsl.solvers.dip_solver_logical": [[6, "module-dipsl.solvers.DIP_Solver_Logical"]], "dipsl.solvers.dip_solver_numerical": [[6, "module-dipsl.solvers.DIP_Solver_Numerical"]], "dipsl.solvers.dip_solver_templates": [[6, "module-dipsl.solvers.DIP_Solver_Templates"]], "dipsl.solvers.dip_solver_units": [[6, "module-dipsl.solvers.DIP_Solver_Units"]], "env (dipsl.solvers.dip_solver_logical.logicalsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Logical.LogicalSolver.env"]], "env (dipsl.solvers.dip_solver_numerical.numericalsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver.env"]], "env (dipsl.solvers.dip_solver_templates.templatesolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Templates.TemplateSolver.env"]], "equal() (dipsl.solvers.dip_solver_numerical.numericalsolver method)": [[6, "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver.equal"]], "nbase (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.nbase"]], "npbase (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.npbase"]], "prefixes (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.prefixes"]], "solve() (dipsl.solvers.dip_solver_logical.logicalsolver method)": [[6, "dipsl.solvers.DIP_Solver_Logical.LogicalSolver.solve"]], "solve() (dipsl.solvers.dip_solver_numerical.numericalsolver method)": [[6, "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver.solve"]], "solve() (dipsl.solvers.dip_solver_templates.templatesolver method)": [[6, "dipsl.solvers.DIP_Solver_Templates.TemplateSolver.solve"]], "solve() (dipsl.solvers.dip_solver_units.unitsolver method)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.solve"]], "template() (dipsl.solvers.dip_solver_templates.templatesolver method)": [[6, "dipsl.solvers.DIP_Solver_Templates.TemplateSolver.template"]], "unit() (dipsl.solvers.dip_solver_units.unitsolver method)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.unit"]], "units (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[6, "dipsl.solvers.DIP_Solver_Units.UnitSolver.units"]]}})