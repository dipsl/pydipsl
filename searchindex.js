Search.setIndex({"docnames": ["api", "api/dipsl", "api/dipsl.datatypes", "api/dipsl.nodes", "api/dipsl.pygments", "api/dipsl.solvers", "api/modules", "index", "intro", "intro/about", "intro/example", "intro/install", "pygments", "pygments/schema_highliter", "pygments/syntax_highliter", "syntax", "syntax/conditions", "syntax/expressions", "syntax/nodes", "syntax/references", "syntax/units", "syntax/validation", "syntax/values"], "filenames": ["api.rst", "api/dipsl.rst", "api/dipsl.datatypes.rst", "api/dipsl.nodes.rst", "api/dipsl.pygments.rst", "api/dipsl.solvers.rst", "api/modules.rst", "index.rst", "intro.rst", "intro/about.rst", "intro/example.rst", "intro/install.rst", "pygments.rst", "pygments/schema_highliter.rst", "pygments/syntax_highliter.rst", "syntax.rst", "syntax/conditions.rst", "syntax/expressions.rst", "syntax/nodes.rst", "syntax/references.rst", "syntax/units.rst", "syntax/validation.rst", "syntax/values.rst"], "titles": ["API", "dipsl package", "dipsl.datatypes package", "dipsl.nodes package", "dipsl.pygments package", "dipsl.solvers package", "dipsl", "DIP - Dimensional Input Parameters", "Introduction", "About DIP", "Example of use", "Installation", "Pygments lexer", "Schema highliter", "Syntax highliter", "Syntax", "Conditions", "Expressions", "Nodes", "References", "Units", "Validation", "Values"], "terms": {"dipsl": [0, 7, 10, 11, 13, 14], "packag": [0, 6], "datatyp": [1, 3, 6, 7, 9, 10, 18, 21], "dip_typ": [1, 6], "type": [1, 2, 4, 7, 10, 13, 17, 18, 19, 20, 22], "unit": [1, 2, 3, 4, 5, 6, 7, 9, 10, 13, 14, 15, 17, 18, 19, 21, 22], "valu": [1, 2, 3, 4, 7, 9, 10, 13, 15, 18, 19, 20, 21], "dip_type_boolean": [1, 6], "booleantyp": [1, 2, 10], "dtype": [1, 2, 3], "dip_type_float": [1, 6], "floattyp": [1, 2, 10], "dip_type_integ": [1, 6], "integertyp": [1, 2, 10], "dip_type_numb": [1, 6], "numbertyp": [1, 2], "convert": [1, 2, 7, 17, 18, 20, 21], "dip_type_str": [1, 6], "stringtyp": [1, 2], "node": [1, 6, 7, 9, 10, 14, 15, 16, 17, 19, 20, 21, 22], "dip_nod": [1, 6], "cast_valu": [1, 3], "condit": [1, 3, 4, 7, 9, 10, 13, 14, 15, 19, 22], "constant": [1, 3, 4, 7, 9, 10, 13, 14, 15], "inject_valu": [1, 3], "modify_valu": [1, 3], "pars": [1, 3, 6, 7, 8, 9, 16, 18, 19, 20, 22], "set_opt": [1, 3], "set_valu": [1, 3], "slice_valu": [1, 3], "dip_nodebas": [1, 6], "nodebas": [1, 3], "code": [1, 3, 6, 7, 8, 9, 11, 18, 19, 20, 21], "defin": [1, 3, 4, 7, 10, 17, 19, 20, 21, 22], "dimens": [1, 3, 4, 6, 7, 17, 18, 19, 20, 21], "indent": [1, 3, 4, 7, 13, 16, 18, 19, 20, 21, 22], "keyword": [1, 3, 4, 16], "line": [1, 3, 6, 7, 18, 21, 22], "name": [1, 3, 4, 6, 13, 14, 16, 17, 18, 19, 20, 21, 22], "option": [1, 3, 4, 7, 9, 10, 13, 14, 15, 16, 22], "sourc": [1, 3, 4, 6, 7, 9, 10, 11, 13, 14, 19], "units_raw": [1, 3], "value_expr": [1, 3], "value_raw": [1, 3], "value_ref": [1, 3], "value_slic": [1, 3], "dip_node_boolean": [1, 6], "booleannod": [1, 3], "is_nod": [1, 3], "dip_node_cas": [1, 6], "casenod": [1, 3], "dip_node_condit": [1, 6], "conditionnod": [1, 3], "dip_node_const": [1, 6], "constantnod": [1, 3], "dip_node_empti": [1, 6], "emptynod": [1, 3], "dip_node_float": [1, 6], "floatnod": [1, 3], "dip_node_format": [1, 6], "formatnod": [1, 3], "dip_node_group": [1, 6], "groupnod": [1, 3], "dip_node_import": [1, 6], "importnod": [1, 3], "dip_node_integ": [1, 6], "integernod": [1, 3], "dip_node_mod": [1, 6], "modnod": [1, 3], "dip_node_opt": [1, 6], "optionnod": [1, 3], "dip_node_sourc": [1, 6], "sourcenod": [1, 3], "dip_node_str": [1, 6], "stringnod": [1, 3], "format": [1, 3, 4, 7, 9, 10, 13, 14, 15, 17, 22], "dip_node_t": [1, 6], "tablenod": [1, 3], "dip_node_unit": [1, 6], "unitnod": [1, 3], "dip_pars": [1, 6], "parser": [1, 3, 7, 22], "ccode": [1, 3], "comment": [1, 3, 4, 13, 14, 18], "is_empti": [1, 3], "is_pars": [1, 3], "kwd_case": [1, 3], "kwd_condit": [1, 3], "kwd_constant": [1, 3], "kwd_format": [1, 3], "kwd_option": [1, 3], "kwd_sourc": [1, 3], "kwd_unit": [1, 3], "part_com": [1, 3], "part_dimens": [1, 3], "part_equ": [1, 3], "part_express": [1, 3], "part_format": [1, 3], "part_ind": [1, 3], "part_nam": [1, 3], "part_refer": [1, 3], "part_slic": [1, 3], "part_typ": [1, 3], "part_unit": [1, 3], "part_valu": [1, 3], "pygment": [1, 6, 7, 9, 13, 14], "dip_lexer_schema": [1, 6, 13], "token": [1, 4], "dip_lexer_styl": [1, 6, 14], "style": [1, 4, 14], "pygments_monkeypatch_styl": [1, 4], "dip_lexer_syntax": [1, 6, 14], "solver": [1, 6, 10], "dip_solver_log": [1, 6], "logicalsolv": [1, 5], "env": [1, 2, 3, 5, 6, 10], "solv": [1, 5], "dip_solver_numer": [1, 6], "numericalsolv": [1, 5], "equal": [1, 5, 17, 18, 21], "dip_solver_templ": [1, 6], "templatesolv": [1, 5, 10], "templat": [1, 5, 7, 8, 9, 15, 20], "dip_solver_unit": [1, 6], "unitsolv": [1, 5], "arbitrari": [1, 3, 5, 6, 20, 21], "base": [1, 2, 3, 4, 5, 6, 9, 15, 18, 21], "custom": [1, 5, 7, 9, 15, 19], "deriv": [1, 5, 15, 17], "nbase": [1, 5], "npbase": [1, 5], "prefix": [1, 5, 15], "class": [1, 2, 3, 4, 5, 10], "environ": [1, 3, 5, 6, 10], "list": [1, 2, 3, 4, 9, 10, 19, 20, 21], "dict": [1, 4, 5], "autoref": [1, 6], "str": [1, 2, 3, 4, 7, 14, 16, 17, 18, 19, 21, 22], "none": [1, 2, 3, 5, 7], "parent_ind": [1, 6], "int": [1, 2, 3, 4, 5, 7, 10, 14, 16, 17, 18, 19, 20, 21, 22], "1": [1, 7, 10, 14, 16, 17, 18, 19, 20, 21, 22], "parent_nam": [1, 6], "case_count": [1, 6], "0": [1, 3, 4, 10, 20, 22], "case_nam": [1, 6], "basemodel": [1, 2, 3, 5], "data": [1, 6, 7, 8, 18, 19, 22], "verbos": 1, "fals": [1, 3, 4, 10, 14, 16, 17, 21, 22], "return": [1, 10, 17, 19], "dictionari": [1, 10], "paramet": [1, 3, 9, 10, 16, 17, 18, 21], "bool": [1, 2, 3, 4, 7, 10, 14, 17, 18, 22], "displai": 1, "onli": [1, 4, 9, 10, 13, 16, 17, 18, 19, 21, 22], "dip": [1, 4, 6, 8, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22], "tupl": [1, 3, 4, 10], "is_cas": [1, 6], "check": [1, 3], "outsid": 1, "insid": 1, "valid": [1, 7, 9, 14, 15, 18, 19, 22], "case": [1, 3, 4, 7, 10, 14, 16, 18, 19, 20, 21], "claus": [1, 16, 21], "pop_nod": [1, 6], "pop": [1, 4], "first": [1, 10, 16, 17, 18, 20], "out": 1, "prepare_nod": [1, 6], "manag": [1, 9, 10], "prepend_nod": [1, 6], "prepend": 1, "new": [1, 4, 10, 19, 20, 21, 22], "queri": [1, 6, 7, 10, 13, 14, 19], "namespac": [1, 4], "select": [1, 10, 19], "local": [1, 4, 7, 9, 19], "accord": [1, 17, 22], "request": [1, 6, 10, 19], "path": [1, 3, 4, 7, 11, 13, 14, 18, 19], "count": 1, "from": [1, 3, 4, 7, 9, 10, 11, 17, 18, 19, 20, 21, 22], "number": [1, 4, 6, 18, 20, 21, 22], "should": [1, 3, 10], "solve_cas": [1, 6], "update_hierarchi": [1, 6], "exclud": [1, 21], "regist": 1, "hierarchi": [1, 14, 15, 16, 19], "ad": [1, 10, 17, 22], "inlin": 1, "object": [1, 3, 10], "us": [1, 3, 7, 8, 9, 11, 16, 17, 18, 19, 20, 21, 22], "string": [1, 4, 5, 9, 10, 17, 18, 19, 21, 22], "load": [1, 6, 7, 10], "filepath": 1, "file": [1, 7, 10, 13, 14, 19], "num": [1, 6, 17, 20], "dfn": [1, 6], "symbol": [1, 4, 6, 20], "symbol_bas": [1, 6], "copi": [1, 6], "duplic": 1, "model": 1, "choos": [1, 10], "which": [1, 4, 18, 19, 21], "field": [1, 22], "includ": [1, 4, 11, 19], "chang": 1, "thi": [1, 2, 4, 7, 9, 10, 11, 16, 18, 19, 20, 21, 22], "take": [1, 3], "preced": 1, "over": [1, 18, 22], "updat": 1, "add": [1, 10, 19], "note": [1, 4, 19], "i": [1, 3, 4, 7, 9, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22], "befor": [1, 18], "creat": [1, 7, 10, 19], "you": [1, 4], "trust": 1, "deep": 1, "set": [1, 3, 7, 9, 10, 18, 19, 21, 22], "true": [1, 3, 4, 7, 10, 14, 16, 17, 21, 22], "make": [1, 7, 19], "instanc": [1, 4, 10], "eqdim": [1, 6], "other": [1, 4, 7, 9, 10, 14, 17, 19, 21], "eqnum": [1, 6], "inunitsof": [1, 6], "isnumer": [1, 6], "float": [1, 2, 3, 4, 7, 9, 10, 14, 17, 18, 19, 20, 21, 22], "convert_arbitrari": [1, 6], "unit1": 1, "unit2": 1, "alia": [2, 3], "cast": [3, 17], "raw": 3, "self": [3, 19, 21], "anoth": [3, 10, 18], "inject": [3, 9, 15], "remot": [3, 9, 19], "modifi": [3, 10, 18, 19, 20, 21, 22], "differ": [3, 7, 14, 17, 18, 20, 21], "slice": [3, 4, 13, 19], "part": [3, 19], "If": [3, 4, 16, 17, 18, 20, 21, 22], "current": [3, 4, 9, 10, 19], "taken": [3, 16], "static": 3, "empti": [3, 17, 18, 20, 21, 22], "bit": [3, 22], "64": [3, 22], "group": [3, 14, 18], "import": [3, 7, 9, 10, 11, 15], "32": [3, 22], "mod": 3, "tabl": [3, 4, 9, 14, 15, 17, 19, 20], "direct": [3, 16, 20, 21], "wa": [3, 7, 9, 10, 14], "alreadi": [3, 9, 18, 19, 20], "arg": 4, "kwd": 4, "regexlex": 4, "lexer": [4, 7, 14], "refer": [4, 7, 9, 10, 14, 15, 17, 20, 21], "push": 4, "reference_slic": 4, "2": [4, 7, 10, 14, 16, 17, 19, 20, 21, 22], "root": 4, "liter": [4, 20], "text": [4, 10, 14, 17, 19, 22], "n": [4, 10, 20], "express": [4, 7, 9, 13, 14, 15, 16, 20, 21], "function": [4, 10, 17, 18], "bygroup": 4, "callback": 4, "tag": 4, "els": [4, 7, 14, 16], "end": [4, 7, 9, 10, 14, 16, 18, 19, 22], "za": [4, 14, 21], "z0": 4, "9_": 4, "At": [4, 17], "all": [4, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22], "time": [4, 7, 19, 20, 22], "stack": 4, "state": 4, "initi": [4, 9, 10, 19, 21], "contain": [4, 10, 19, 21], "singl": [4, 16, 18, 19, 20, 21, 22], "The": [4, 7, 10, 14, 16, 17, 18, 19, 20, 21], "top": 4, "call": [4, 18, 21, 22], "regex": 4, "tokentyp": 4, "new_stat": 4, "can": [4, 7, 10, 11, 16, 17, 18, 19, 20, 21, 22], "omit": [4, 14, 16, 18], "signifi": 4, "transit": 4, "ensur": [4, 20], "those": [4, 18, 21], "ar": [4, 7, 9, 10, 11, 14, 16, 17, 18, 19, 20, 21, 22], "last": [4, 16, 19], "element": 4, "also": [4, 9, 11, 16, 17, 18, 19, 20, 21, 22], "combin": [4, 10, 20, 21], "state1": 4, "state2": 4, "anonym": 4, "rule": 4, "two": [4, 10, 16, 17, 18, 19, 20, 21], "more": [4, 11, 17, 18, 19], "exist": [4, 17, 20], "ones": 4, "furthermor": 4, "go": 4, "back": 4, "one": [4, 10, 14, 16, 17, 18, 19, 21, 22], "step": [4, 10], "again": 4, "while": 4, "itself": 4, "replac": 4, "boolean": [4, 9, 17, 18, 21, 22], "bold": 4, "0d47a1": 4, "ital": 4, "fb8c00": 4, "hashbang": 4, "multilin": 4, "preproc": 4, "preprocfil": 4, "special": [4, 10, 14, 16, 18, 20, 21, 22], "9e9e9": 4, "error": [4, 9, 20, 21], "border": 4, "f44336": 4, "escap": [4, 14], "8d6e63": 4, "gener": [4, 9, 10, 14, 17, 21], "delet": 4, "emph": 4, "head": [4, 7], "insert": [4, 19], "output": [4, 19, 22], "prompt": 4, "strong": 4, "subhead": 4, "traceback": 4, "bdbdbd": 4, "757575": 4, "declar": [4, 9, 14, 15, 20, 21, 22], "pseudo": 4, "reserv": 4, "date": 4, "b71c1c": 4, "bin": 4, "hex": 4, "integ": [4, 9, 18, 19, 20, 22], "long": [4, 9, 18, 21], "oct": 4, "558b2f": 4, "affix": 4, "backtick": 4, "char": 4, "delimit": 4, "doc": 4, "doubl": [4, 17, 18, 22], "heredoc": 4, "interpol": 4, "616161": 4, "attribut": 4, "builtin": 4, "decor": 4, "entiti": 4, "except": [4, 20, 21], "magic": 4, "label": 4, "properti": 4, "0097a7": 4, "variabl": [4, 7, 10], "global": 4, "oper": 4, "word": [4, 22], "punctuat": 4, "marker": 4, "e64a19": 4, "ff8a65": 4, "whitespac": 4, "607d8b": 4, "definit": [4, 7, 8, 9, 13, 14, 15, 17, 19, 20, 21, 22], "individu": [4, 21, 22], "mod_nam": 4, "cl": 4, "expr_doubl": 4, "reference_expr": 4, "expr_singl": 4, "expr_tripl": 4, "node_typ": 4, "type_dim": 4, "node_valu": 4, "9": [4, 14, 20, 22], "e": [4, 7, 17, 18, 20, 21], "str_singl": 4, "str_tripl": 4, "str_doubl": 4, "4": [4, 7, 10, 14, 17, 19, 20, 22], "9sdef": 4, "3": [4, 7, 10, 14, 16, 17, 18, 19, 20, 21, 22], "_": 4, "6": [4, 14, 17, 20, 21, 22], "expr": [5, 17, 20], "expr1": 5, "expr2": 5, "in_unit": 5, "file_in": 5, "file_out": 5, "right": 5, "expr_bak": 5, "subpackag": 6, "submodul": 6, "modul": [6, 7, 9, 10, 11], "content": [6, 19], "dip_environ": [6, 7], "dip_main": 6, "dip_set": 6, "dip_unit": 6, "dip_unitlist": 6, "your": [7, 11], "tastier": 7, "serv": [7, 20], "nice": 7, "introduct": 7, "about": [7, 8, 18], "instal": [7, 8], "exampl": [7, 8, 11, 17, 18, 19, 20, 21], "syntax": [7, 9, 12, 17, 18], "api": 7, "highlit": [7, 12], "schema": [7, 12, 16, 17, 18, 19, 20, 21], "welcom": [7, 9], "document": [7, 9, 10], "specif": [7, 19, 21], "design": [7, 9, 13], "massiv": 7, "parallel": 7, "physic": [7, 9, 20], "mathemat": [7, 17], "engen": [7, 9], "mostli": 7, "written": [7, 10, 18, 20, 22], "c": [7, 9, 14, 17, 18, 20], "fortran": [7, 9], "Such": [7, 10], "requir": [7, 10, 16, 17, 21], "multipl": [7, 10, 16, 17, 18, 19, 20, 22], "quantiti": [7, 20], "compil": [7, 9], "flag": [7, 9], "precis": 7, "In": [7, 9, 10, 14, 18, 19, 20, 21], "larg": [7, 19, 21, 22], "project": [7, 9, 11], "get": [7, 8], "quickli": 7, "messi": 7, "confus": 7, "especi": [7, 10], "when": [7, 10, 19, 20], "sever": [7, 21, 22], "pre": 7, "processor": 7, "bash": 7, "shell": 7, "environment": [7, 10], "csv": [7, 22], "json": [7, 22], "yaml": 7, "toml": 7, "similar": [7, 17, 19, 20, 22], "notat": [7, 17, 18, 19, 20, 21, 22], "adjust": 7, "explicit": [7, 20, 21], "proper": [7, 9], "numer": [7, 9, 10, 15, 19, 20, 21, 22], "most": [7, 13, 17, 20], "notabl": 7, "featur": [7, 9, 19], "languag": [7, 9, 10, 13, 14, 17, 18, 20], "weight": [7, 14, 17, 18, 19, 20, 22], "56": 7, "kg": [7, 14, 17, 18, 19, 20, 22], "veloc": [7, 19, 20, 22], "78": 7, "km": [7, 19, 20, 22], "": [7, 9, 10, 14, 16, 17, 18, 19, 20, 22], "hierarch": [7, 9, 18], "structur": [7, 9, 18], "human": 7, "nose": 7, "ey": 7, "modif": [7, 9, 14, 15, 19, 20, 21], "automat": [7, 9, 14, 17, 20, 22], "convers": [7, 9, 20], "energi": [7, 17, 20, 21], "j": [7, 20, 21], "erg": [7, 20, 21], "4e": [7, 21], "7": [7, 20, 21, 22], "geometri": [7, 10], "plane": 7, "volum": 7, "inclus": 7, "extern": [7, 19], "wine": 7, "txt": [7, 10, 19], "veggi": 7, "veget": 7, "fruit": [7, 19], "basket": 7, "pear": 7, "legum": 7, "serial": 7, "intens": [7, 22], "23": [7, 10, 14, 17, 19, 20, 21, 22], "w": [7, 20, 22], "m2": [7, 20, 22], "cg": [7, 9], "length": [7, 14, 18, 20], "cm": [7, 10, 14, 17, 18, 19, 20], "mass": [7, 19, 20, 22], "g": [7, 14, 18, 20, 21], "mk": 7, "m": [7, 17, 19, 20], "modular": 7, "search": 7, "p": [7, 20], "laser": 7, "1e25": 7, "radiat": [7, 10], "gravit": 7, "laser_set": 7, "radiation_pressur": 7, "pressur": [7, 19, 20], "nativ": [7, 9, 10], "python": [7, 9, 10, 11, 14, 17, 18, 19, 21, 22], "todo": 7, "produc": 7, "support": [7, 9, 10, 17, 18, 20], "tabular": [7, 22], "intput": 7, "mani": [7, 14], "side": 7, "doe": [7, 16, 17, 20], "have": [7, 10, 16, 17, 18, 19, 20, 21, 22], "ani": [7, 9, 16, 18, 22], "particular": [7, 10, 21], "develop": [7, 9, 10], "team": 7, "kind": [7, 9], "help": [7, 9], "highli": 7, "appreci": 7, "index": 7, "page": 7, "minimalist": 9, "program": [9, 10, 14, 17], "spetial": 9, "dimension": [9, 17, 18, 20, 21, 22], "It": [9, 10, 14, 18, 19, 20, 21], "origin": [9, 18], "subproject": 9, "proprietari": 9, "fusion": 9, "nevertheless": [9, 10, 11, 18], "due": 9, "potenti": [9, 20], "we": [9, 10, 18, 19, 20, 21], "publish": 9, "an": [9, 10, 14, 16, 18, 19, 20, 21, 22], "open": 9, "astrophys": 9, "usual": [9, 21], "depend": [9, 17, 19], "descript": [9, 10, 17, 18, 20], "often": [9, 10, 21], "poorli": 9, "prone": 9, "wrong": 9, "input": [9, 10, 21], "lack": 9, "adress": 9, "issu": 9, "provid": [9, 16, 17], "standard": [9, 17, 19, 20, 21, 22], "scalabl": 9, "interfac": 9, "between": [9, 18, 22], "user": [9, 10, 19], "run": 9, "aim": [9, 17], "becom": 9, "tool": [9, 10, 17, 21], "flatten": 9, "learn": 9, "curv": 9, "follow": [9, 10, 11, 13, 17, 18, 19, 20, 21], "implement": [9, 10, 17], "version": [9, 17], "scalar": [9, 14, 15, 17], "arrai": [9, 14, 15, 17, 19, 20, 21], "block": [9, 13, 15, 17, 18, 19], "logic": [9, 15, 16, 18, 20, 21], "si": 9, "dure": [9, 21], "branch": [9, 16], "highlight": [9, 13, 14], "still": 9, "beta": 9, "stage": 9, "gole": 9, "below": [9, 14, 17, 19, 20, 21, 22], "yet": 9, "need": [9, 10, 18], "codevelop": 9, "calcul": [9, 20], "sphinx": 9, "collabor": 9, "suggest": 9, "further": [9, 18, 21], "hearthli": 9, "under": [9, 21], "mit": 9, "licens": 9, "kindli": 9, "ask": 9, "main": [10, 11, 16, 18, 19], "For": [10, 16, 22], "look": 10, "correspond": [10, 16, 20, 21, 22], "A": [10, 17, 19, 20], "its": [10, 14, 16, 17, 19, 22], "diplang": 10, "extent": 10, "otherwis": [10, 18], "thei": [10, 18, 19, 20, 21], "interpret": [10, 14, 17], "normal": [10, 18], "runtim": 10, "t_max": 10, "10": [10, 20, 21, 22], "timestep": 10, "01": [10, 17, 19], "box": 10, "size": [10, 18, 19], "x": 10, "nm": 10, "y": [10, 20], "3e7": 10, "heat": 10, "recommendet": 10, "statement": 10, "mpi": 10, "36": 10, "core": 10, "96": 10, "env1": 10, "store": [10, 22], "easili": [10, 17, 19], "transfer": 10, "immediatelli": [10, 21], "without": [10, 17, 18, 19, 20, 22], "addit": [10, 17], "pass": 10, "env2": 10, "method": 10, "geom": 10, "abov": [10, 16, 18, 19, 21, 22], "same": [10, 17, 18, 19, 20, 21], "umber": 10, "order": [10, 14, 18, 21], "what": 10, "give": [10, 17], "control": 10, "compulsori": 10, "mandatori": 10, "imput": 10, "fiction": 10, "linear": 10, "cylindr": 10, "spheric": [10, 21], "non": [10, 17, 18, 22], "z": [10, 14, 20, 21], "hydrdynam": 10, "some": [10, 19, 20, 21], "via": [10, 19], "result": [10, 16, 17, 18, 19], "env3": 10, "1e": [10, 20], "08": 10, "11": [10, 20, 22], "06": 10, "sometim": [10, 21, 22], "even": [10, 16], "process": [10, 19], "sinc": 10, "programm": 10, "later": [10, 18], "t": [10, 20], "nbox": 10, "avail": 11, "github": 11, "repositori": 11, "One": [11, 18, 19], "librari": 11, "directli": [11, 17, 18, 19, 20, 21], "directori": 11, "pythonpath": 11, "cd": [11, 20], "git": 11, "clone": 11, "http": 11, "com": 11, "dippi": 11, "export": 11, "home": 11, "src": 11, "script": [11, 19], "sy": 11, "append": 11, "recommend": 11, "pypi": 11, "pip3": 11, "section": [11, 20, 21], "basic": [13, 18, 20], "concept": [13, 14], "py": [13, 14], "sumar": 13, "posibl": [13, 16], "share": [14, 18, 20], "commong": 14, "like": 14, "howev": [14, 17, 18, 19, 20, 21], "enough": 14, "caus": 14, "problem": 14, "therefor": [14, 17], "come": 14, "own": [14, 19], "overview": [14, 22], "capabl": 14, "start": [14, 16, 17, 18, 21, 22], "curli": [14, 17], "bracket": [14, 17, 20, 22], "plain": [14, 17], "ha": [14, 16, 17, 19, 20, 21], "them": [14, 17], "slash": 14, "sign": [14, 18, 21, 22], "more_word": 14, "stuff34": 14, "foo": 14, "bar": 14, "43": [14, 17, 21], "b": [14, 17], "d": [14, 20], "12": [14, 17, 20, 22], "3e23": 14, "3e": [14, 17, 21], "pow": [14, 17], "const": [14, 17, 20], "id": [14, 17, 22], "05d": [14, 17], "surnam": [14, 17, 19], "5": [14, 17, 19, 22], "width": [14, 17], "2e": [14, 17], "john": [14, 16, 18, 21, 22], "peter": [14, 18, 22], "simon": [14, 22], "28": [14, 20], "83": 14, "29": 14, "30": [14, 20], "26": [14, 21], "init": [14, 19], "winner": [14, 16], "famili": [14, 18], "smith": [14, 17, 19], "parent": [14, 16, 18, 21], "father": [14, 18], "mother": 14, "mari": [14, 21], "children": [14, 16, 18, 19], "infant": 14, "consecut": 16, "necessari": [16, 22], "second": [16, 17, 20], "There": [16, 17, 18], "child": [16, 18], "must": [16, 17, 18, 21], "higher": [16, 21], "than": [16, 17, 21], "each": [16, 18, 20, 21, 22], "argument": 16, "evalu": [16, 17, 21], "termin": 16, "skip": 16, "subsequ": [16, 18, 20], "test": [16, 17], "purpous": 16, "instead": [16, 19], "veri": [16, 22], "previou": [16, 20], "whose": 16, "separ": [16, 17, 18, 19, 21, 22], "after": [16, 18, 21, 22], "jenni": 16, "default": [16, 17, 20], "jona": 16, "toi": 16, "doll": 16, "robot": 16, "nest": [16, 17, 22], "flower": 16, "rose": 16, "dandelion": 16, "color": 16, "red": 16, "blue": 16, "leav": 16, "234": [16, 20, 21, 22], "yellow": 16, "tree": 16, "mapl": 16, "though": 16, "effect": 16, "indirectli": 17, "wrap": [17, 18, 20, 21, 22], "quot": [17, 18, 22], "three": [17, 20], "textual": 17, "describ": [17, 18, 20, 21], "chapter": [17, 18, 19, 20], "least": [17, 18, 22], "space": [17, 18, 20, 22], "possibl": [17, 18, 19, 20, 21, 22], "summar": [17, 20, 21], "24": [17, 20], "ref": [17, 19], "prioriti": 17, "accordingli": [17, 18], "compos": 17, "alwai": [17, 18, 19], "given": [17, 18, 20, 21, 22], "either": [17, 18, 19], "OR": 17, "AND": 17, "thread": 17, "compar": 17, "moment": 17, "plan": 17, "next": [17, 22], "numera": 17, "up": [17, 20], "equal_precis": 17, "inequ": 17, "do": [17, 18, 19, 22], "greater": 17, "smaller": 17, "greather": 17, "negat": 17, "299792458": [17, 20], "ev": [17, 20], "79751": 17, "substitu": 17, "advanc": 17, "suppos": 17, "quick": 17, "futur": 17, "substract": 17, "divis": [17, 20], "final": [17, 18, 19, 21, 22], "exp": 17, "exponenti": 17, "dimensionless": 17, "risen": 17, "power": [17, 20], "ln": 17, "natur": 17, "logarithm": 17, "log10": 17, "common": [17, 18], "dimmensionless": 17, "sin": 17, "sine": 17, "co": 17, "cosin": 17, "form": [17, 18, 20, 22], "345": 17, "tina": 17, "bodi": 17, "62": 17, "height": [17, 20], "177": 17, "marri": 17, "person": [17, 19], "2f": 17, "00345": 17, "230e": 17, "00": 17, "specifi": [17, 18, 19, 21, 22], "Will": [17, 19], "235": 17, "34": [17, 19, 20, 21, 22], "1e10": 17, "2e23": 17, "5e20": 17, "preview": 17, "00e": 17, "354e": 17, "02": 17, "400e": [17, 19], "000e": [17, 19], "20": 17, "member": 18, "interchang": 18, "begin": 18, "determin": [18, 20], "consist": [18, 19, 20, 21, 22], "zero": [18, 20], "letter": [18, 21], "underscor": 18, "hyphen": 18, "dot": 18, "becaus": [18, 19, 20], "four": [18, 22], "principl": [18, 20], "extend": 18, "match": [18, 19, 21], "left": 18, "charact": [18, 21], "span": [18, 22], "detail": 18, "subsect": 18, "respect": 18, "hash": 18, "occur": 18, "70": 18, "80": [18, 20], "90": [18, 20], "100": [18, 20], "pc": [18, 20], "086e18": 18, "where": 18, "88": 18, "organ": 18, "wai": [18, 19, 22], "lower": 18, "sibl": 18, "level": 18, "allow": [18, 21], "vari": 18, "grandfath": 18, "cintia": 18, "ben": 18, "lucia": 18, "son": 18, "benjamin": 18, "daughter": 18, "aunt": 18, "both": [18, 19, 20], "besid": [18, 19], "arrang": 18, "carri": 18, "nor": 18, "Their": 18, "enter": 18, "transform": 18, "plu": 18, "dog": [18, 21], "lassi": 18, "referenc": 19, "enabl": 19, "reusabl": 19, "url": 19, "question": 19, "mark": [19, 22], "onc": 19, "context": 19, "simpl": [19, 20], "domain": 19, "were": 19, "complet": 19, "independ": 19, "querri": 19, "full": 19, "asterix": 19, "applic": 19, "locat": 19, "explain": 19, "embed": 19, "shown": 19, "icecream": 19, "waffl": 19, "scoop": 19, "strawberri": 19, "chocol": 19, "bowl": 19, "plate": 19, "work": 19, "just": 19, "front": 19, "bag": 19, "vegi": 19, "potato": 19, "subnod": 19, "so": [19, 20], "far": [19, 20], "how": [19, 20], "regular": [19, 21], "dynam": 19, "whole": 19, "size1": 19, "size2": 19, "size3": 19, "3400": 19, "magnet": 19, "host": 19, "adopt": [19, 20], "1e34": 19, "mysiz": 19, "rang": [19, 21], "mymass": 19, "334e": 19, "keep": 19, "readabl": 19, "edit": 19, "messag": [19, 21], "comparison": [19, 20], "adit": 19, "scalablil": 19, "markup": 20, "nomenclatur": 20, "sensit": 20, "unifi": 20, "measur": 20, "assign": 20, "assum": 20, "ag": 20, "185": 20, "35": 20, "190": 20, "90000": 20, "point": 20, "nv": 20, "msr": 20, "ten": 20, "meter": 20, "gram": 20, "k": 20, "kelvin": 20, "coulomb": 20, "candela": 20, "mol": 20, "mole": 20, "rad": 20, "radian": 20, "mr": 20, "newton": 20, "dimenson": 20, "rais": [20, 21], "1e3": [20, 22], "corespond": 20, "yotta": 20, "1e24": 20, "zetta": 20, "1e21": 20, "21": 20, "exa": 20, "1e18": 20, "18": 20, "peta": 20, "1e15": 20, "15": [20, 22], "tera": 20, "1e12": 20, "giga": 20, "1e9": 20, "mega": 20, "1e6": 20, "kilo": 20, "h": 20, "hecto": 20, "1e2": 20, "da": 20, "deka": 20, "1e1": 20, "deci": 20, "centi": 20, "milli": 20, "u": 20, "micro": 20, "nano": 20, "pico": 20, "f": 20, "femto": 20, "atto": 20, "zepto": 20, "yocto": 20, "As": 20, "mention": 20, "foruth": 20, "plai": 20, "promin": 20, "role": 20, "integr": 20, "close": 20, "pu": 20, "rad2": 20, "real": 20, "s2": 20, "parenthesi": 20, "thu": 20, "cannot": [20, 21], "101": 20, "pa": 20, "distanc": [20, 22], "123": 20, "60": 20, "8": [20, 22], "3e2": 20, "simpli": 20, "sum": 20, "multipli": 20, "divid": 20, "progenitor": 20, "correspondingli": 20, "rebas": 20, "multipi": 20, "squar": 20, "m_p": 20, "coincid": 20, "sr": 20, "steradian": 20, "hz": 20, "hertz": 20, "pascal": 20, "joul": 20, "watt": 20, "amper": 20, "v": 20, "volt": 20, "farad": 20, "ohm": 20, "siemen": 20, "wb": 20, "weber": 20, "tesla": 20, "henri": 20, "lm": 20, "lumen": 20, "lx": 20, "lux": 20, "bq": 20, "becquerel": 20, "gy": 20, "grai": 20, "sv": 20, "sivert": 20, "dyn": 20, "dyne": 20, "gauss": 20, "deg": 20, "angl": 20, "degre": 20, "pi": 20, "360": 20, "minut": 20, "l": 20, "dm3": 20, "min": 20, "hour": 20, "dai": [20, 22], "a_t": 20, "tropic": 20, "year": [20, 22], "365": 20, "24219": 20, "a_j": 20, "julian": 20, "25": [20, 21, 22], "a_g": 20, "gregorian": 20, "2425": 20, "electronvolt": 20, "au": 20, "astr": 20, "149597": 20, "870691": 20, "mm": 20, "light": 20, "planck": 20, "6260755e": 20, "boltzmann": 20, "380658e": 20, "eps_0": 20, "permit": 20, "vac": 20, "854187817e": 20, "mu_0": 20, "permeab": 20, "a2": 20, "elem": 20, "charg": 20, "60217733e": 20, "19": 20, "m_e": 20, "electron": 20, "1093897e": 20, "proton": 20, "6726231e": 20, "grav": 20, "67259e": 20, "m3": 20, "accel": 20, "80665": 20, "atm": 20, "101325": 20, "ly": 20, "141593": 20, "euler": 20, "718282": 20, "n_a": 20, "avogadro": 20, "022137e23": 20, "percent": 20, "ppth": 20, "promil": 20, "similarili": 20, "achiev": [20, 21], "densiti": 20, "lenght": 20, "restrict": 21, "accept": 21, "small": 21, "discret": 21, "These": 21, "implicit": 21, "coordin": 21, "carthesian": 21, "polar": 21, "throw": 21, "anim": [21, 22], "cat": 21, "hors": 21, "too": 21, "practic": 21, "write": 21, "shorthand": 21, "expect": 21, "similiarili": 21, "defininit": 21, "against": 21, "45": 21, "490": 21, "1939": 21, "34e": 21, "interv": 21, "actual": 21, "quotemark": 21, "capit": 21, "ferdin": 21, "stai": 21, "follw": 21, "expampl": 21, "night": 22, "2023": 22, "durat": 22, "3e20": 22, "scientif": 22, "citi": 22, "york": 22, "countri": 22, "kingdom": 22, "hanl": 22, "data1": 22, "exactli": 22, "data2": 22, "data3": 22, "34e4": 22, "data4": 22, "maximum": 22, "tight": 22, "want": 22, "loos": 22, "multidimension": 22, "matrix": 22, "appli": 22, "50": 22, "95": 22, "1e4": 22, "trippl": 22, "simiarili": 22, "13": 22, "14": 22, "16": 22, "lorem": 22, "ipsum": 22, "dolor": 22, "sit": 22, "amet": 22, "consectetur": 22, "adipisc": 22, "elit": 22, "sed": 22, "eiusmod": 22, "tempor": 22, "incididunt": 22, "ut": 22, "labor": 22, "et": 22, "magna": 22, "aliqua": 22, "enim": 22, "minim": 22, "veniam": 22, "qui": 22, "nostrud": 22, "exercit": 22, "ullamco": 22, "labori": 22, "nisi": 22, "aliquip": 22, "ex": 22, "ea": 22, "commodo": 22, "consequat": 22, "dui": 22, "aut": 22, "irur": 22, "reprehenderit": 22, "volupt": 22, "velit": 22, "ess": 22, "cillum": 22, "eu": 22, "fugiat": 22, "nulla": 22, "pariatur": 22, "excepteur": 22, "sint": 22, "occaecat": 22, "cupidatat": 22, "proident": 22, "sunt": 22, "culpa": 22, "officia": 22, "deserunt": 22, "mollit": 22, "est": 22, "laborum": 22, "easier": 22, "comprendi": 22, "put": 22, "amount": 22, "reason": 22, "tabul": 22, "header": 22, "column": 22, "snapshot": 22, "355": 22, "535": 22, "255": 22, "455": 22, "equival": 22}, "objects": {"": [[1, 0, 0, "-", "dipsl"]], "dipsl": [[1, 0, 0, "-", "DIP_Environment"], [1, 0, 0, "-", "DIP_Main"], [1, 0, 0, "-", "DIP_Settings"], [1, 0, 0, "-", "DIP_Unit"], [1, 0, 0, "-", "DIP_UnitList"], [2, 0, 0, "-", "datatypes"], [3, 0, 0, "-", "nodes"], [4, 0, 0, "-", "pygments"], [5, 0, 0, "-", "solvers"]], "dipsl.DIP_Environment": [[1, 1, 1, "", "Environment"]], "dipsl.DIP_Environment.Environment": [[1, 2, 1, "", "autoref"], [1, 2, 1, "", "case_counts"], [1, 2, 1, "", "case_names"], [1, 3, 1, "", "data"], [1, 3, 1, "", "is_case"], [1, 2, 1, "", "nodes"], [1, 2, 1, "", "parent_indents"], [1, 2, 1, "", "parent_names"], [1, 3, 1, "", "pop_node"], [1, 3, 1, "", "prepare_node"], [1, 3, 1, "", "prepend_nodes"], [1, 3, 1, "", "query"], [1, 3, 1, "", "request"], [1, 3, 1, "", "solve_case"], [1, 2, 1, "", "sources"], [1, 2, 1, "", "units"], [1, 3, 1, "", "update_hierarchy"]], "dipsl.DIP_Main": [[1, 1, 1, "", "DIP"]], "dipsl.DIP_Main.DIP": [[1, 3, 1, "", "code"], [1, 2, 1, "", "env"], [1, 2, 1, "", "lines"], [1, 3, 1, "", "load"], [1, 3, 1, "", "parse"], [1, 2, 1, "", "source"]], "dipsl.DIP_Unit": [[1, 1, 1, "", "Unit"]], "dipsl.DIP_Unit.Unit": [[1, 2, 1, "", "arbitrary"], [1, 2, 1, "", "base"], [1, 3, 1, "", "copy"], [1, 2, 1, "", "dfn"], [1, 3, 1, "", "dimension"], [1, 3, 1, "", "eqdim"], [1, 3, 1, "", "eqnum"], [1, 3, 1, "", "inunitsof"], [1, 3, 1, "", "isnumeric"], [1, 2, 1, "", "name"], [1, 2, 1, "", "num"], [1, 3, 1, "", "number"], [1, 2, 1, "", "symbol"], [1, 2, 1, "", "symbol_base"]], "dipsl.DIP_UnitList": [[1, 4, 1, "", "Convert_Arbitrary"]], "dipsl.datatypes": [[2, 0, 0, "-", "DIP_Type"], [2, 0, 0, "-", "DIP_Type_Boolean"], [2, 0, 0, "-", "DIP_Type_Float"], [2, 0, 0, "-", "DIP_Type_Integer"], [2, 0, 0, "-", "DIP_Type_Number"], [2, 0, 0, "-", "DIP_Type_String"]], "dipsl.datatypes.DIP_Type": [[2, 1, 1, "", "Type"]], "dipsl.datatypes.DIP_Type.Type": [[2, 2, 1, "", "unit"], [2, 2, 1, "", "value"]], "dipsl.datatypes.DIP_Type_Boolean": [[2, 1, 1, "", "BooleanType"]], "dipsl.datatypes.DIP_Type_Boolean.BooleanType": [[2, 2, 1, "", "dtype"], [2, 2, 1, "", "value"]], "dipsl.datatypes.DIP_Type_Float": [[2, 1, 1, "", "FloatType"]], "dipsl.datatypes.DIP_Type_Float.FloatType": [[2, 2, 1, "", "dtype"], [2, 2, 1, "", "value"]], "dipsl.datatypes.DIP_Type_Integer": [[2, 1, 1, "", "IntegerType"]], "dipsl.datatypes.DIP_Type_Integer.IntegerType": [[2, 2, 1, "", "dtype"], [2, 2, 1, "", "value"]], "dipsl.datatypes.DIP_Type_Number": [[2, 1, 1, "", "NumberType"]], "dipsl.datatypes.DIP_Type_Number.NumberType": [[2, 3, 1, "", "convert"]], "dipsl.datatypes.DIP_Type_String": [[2, 1, 1, "", "StringType"]], "dipsl.datatypes.DIP_Type_String.StringType": [[2, 2, 1, "", "dtype"], [2, 2, 1, "", "value"]], "dipsl.nodes": [[3, 0, 0, "-", "DIP_Node"], [3, 0, 0, "-", "DIP_NodeBase"], [3, 0, 0, "-", "DIP_Node_Boolean"], [3, 0, 0, "-", "DIP_Node_Case"], [3, 0, 0, "-", "DIP_Node_Condition"], [3, 0, 0, "-", "DIP_Node_Constant"], [3, 0, 0, "-", "DIP_Node_Empty"], [3, 0, 0, "-", "DIP_Node_Float"], [3, 0, 0, "-", "DIP_Node_Format"], [3, 0, 0, "-", "DIP_Node_Group"], [3, 0, 0, "-", "DIP_Node_Import"], [3, 0, 0, "-", "DIP_Node_Integer"], [3, 0, 0, "-", "DIP_Node_Mod"], [3, 0, 0, "-", "DIP_Node_Option"], [3, 0, 0, "-", "DIP_Node_Source"], [3, 0, 0, "-", "DIP_Node_String"], [3, 0, 0, "-", "DIP_Node_Table"], [3, 0, 0, "-", "DIP_Node_Unit"], [3, 0, 0, "-", "DIP_Parser"]], "dipsl.nodes.DIP_Node": [[3, 1, 1, "", "Node"]], "dipsl.nodes.DIP_Node.Node": [[3, 3, 1, "", "cast_value"], [3, 2, 1, "", "condition"], [3, 2, 1, "", "constant"], [3, 3, 1, "", "inject_value"], [3, 3, 1, "", "modify_value"], [3, 3, 1, "", "parse"], [3, 3, 1, "", "set_option"], [3, 3, 1, "", "set_value"], [3, 3, 1, "", "slice_value"], [3, 2, 1, "", "value"]], "dipsl.nodes.DIP_NodeBase": [[3, 1, 1, "", "NodeBase"]], "dipsl.nodes.DIP_NodeBase.NodeBase": [[3, 2, 1, "", "code"], [3, 2, 1, "", "defined"], [3, 2, 1, "", "dimension"], [3, 2, 1, "", "dtype"], [3, 2, 1, "", "indent"], [3, 2, 1, "", "keyword"], [3, 2, 1, "", "line"], [3, 2, 1, "", "name"], [3, 2, 1, "", "options"], [3, 2, 1, "", "source"], [3, 2, 1, "", "units_raw"], [3, 2, 1, "", "value_expr"], [3, 2, 1, "", "value_raw"], [3, 2, 1, "", "value_ref"], [3, 2, 1, "", "value_slice"]], "dipsl.nodes.DIP_Node_Boolean": [[3, 1, 1, "", "BooleanNode"]], "dipsl.nodes.DIP_Node_Boolean.BooleanNode": [[3, 2, 1, "", "dtype"], [3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"], [3, 3, 1, "", "set_value"], [3, 2, 1, "", "value"]], "dipsl.nodes.DIP_Node_Case": [[3, 1, 1, "", "CaseNode"]], "dipsl.nodes.DIP_Node_Case.CaseNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Condition": [[3, 1, 1, "", "ConditionNode"]], "dipsl.nodes.DIP_Node_Condition.ConditionNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Constant": [[3, 1, 1, "", "ConstantNode"]], "dipsl.nodes.DIP_Node_Constant.ConstantNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Empty": [[3, 1, 1, "", "EmptyNode"]], "dipsl.nodes.DIP_Node_Empty.EmptyNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"]], "dipsl.nodes.DIP_Node_Float": [[3, 1, 1, "", "FloatNode"]], "dipsl.nodes.DIP_Node_Float.FloatNode": [[3, 2, 1, "", "dtype"], [3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 2, 1, "", "options"], [3, 3, 1, "", "parse"], [3, 3, 1, "", "set_value"], [3, 2, 1, "", "value"], [3, 2, 1, "", "value_expr"]], "dipsl.nodes.DIP_Node_Format": [[3, 1, 1, "", "FormatNode"]], "dipsl.nodes.DIP_Node_Format.FormatNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Group": [[3, 1, 1, "", "GroupNode"]], "dipsl.nodes.DIP_Node_Group.GroupNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"]], "dipsl.nodes.DIP_Node_Import": [[3, 1, 1, "", "ImportNode"]], "dipsl.nodes.DIP_Node_Import.ImportNode": [[3, 3, 1, "", "inject_value"], [3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Integer": [[3, 1, 1, "", "IntegerNode"]], "dipsl.nodes.DIP_Node_Integer.IntegerNode": [[3, 2, 1, "", "dtype"], [3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 2, 1, "", "options"], [3, 3, 1, "", "parse"], [3, 3, 1, "", "set_value"], [3, 2, 1, "", "value"], [3, 2, 1, "", "value_expr"]], "dipsl.nodes.DIP_Node_Mod": [[3, 1, 1, "", "ModNode"]], "dipsl.nodes.DIP_Node_Mod.ModNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Option": [[3, 1, 1, "", "OptionNode"]], "dipsl.nodes.DIP_Node_Option.OptionNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Source": [[3, 1, 1, "", "SourceNode"]], "dipsl.nodes.DIP_Node_Source.SourceNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_String": [[3, 1, 1, "", "StringNode"]], "dipsl.nodes.DIP_Node_String.StringNode": [[3, 2, 1, "", "format"], [3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 2, 1, "", "options"], [3, 3, 1, "", "parse"], [3, 3, 1, "", "set_value"]], "dipsl.nodes.DIP_Node_Table": [[3, 1, 1, "", "TableNode"]], "dipsl.nodes.DIP_Node_Table.TableNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Node_Unit": [[3, 1, 1, "", "UnitNode"]], "dipsl.nodes.DIP_Node_Unit.UnitNode": [[3, 3, 1, "", "is_node"], [3, 2, 1, "", "keyword"], [3, 3, 1, "", "parse"]], "dipsl.nodes.DIP_Parser": [[3, 1, 1, "", "Parser"]], "dipsl.nodes.DIP_Parser.Parser": [[3, 2, 1, "", "ccode"], [3, 2, 1, "", "comment"], [3, 2, 1, "", "formating"], [3, 3, 1, "", "is_empty"], [3, 3, 1, "", "is_parsed"], [3, 3, 1, "", "kwd_case"], [3, 3, 1, "", "kwd_condition"], [3, 3, 1, "", "kwd_constant"], [3, 3, 1, "", "kwd_format"], [3, 3, 1, "", "kwd_options"], [3, 3, 1, "", "kwd_source"], [3, 3, 1, "", "kwd_unit"], [3, 2, 1, "", "parsed"], [3, 3, 1, "", "part_comment"], [3, 3, 1, "", "part_dimension"], [3, 3, 1, "", "part_equal"], [3, 3, 1, "", "part_expression"], [3, 3, 1, "", "part_format"], [3, 3, 1, "", "part_indent"], [3, 3, 1, "", "part_name"], [3, 3, 1, "", "part_reference"], [3, 3, 1, "", "part_slice"], [3, 3, 1, "", "part_type"], [3, 3, 1, "", "part_units"], [3, 3, 1, "", "part_value"]], "dipsl.pygments": [[4, 0, 0, "-", "DIP_Lexer_Schema"], [4, 0, 0, "-", "DIP_Lexer_Style"], [4, 0, 0, "-", "DIP_Lexer_Syntax"]], "dipsl.pygments.DIP_Lexer_Schema": [[4, 1, 1, "", "DIP_Lexer_Schema"]], "dipsl.pygments.DIP_Lexer_Schema.DIP_Lexer_Schema": [[4, 2, 1, "", "name"], [4, 2, 1, "", "tokens"]], "dipsl.pygments.DIP_Lexer_Style": [[4, 1, 1, "", "DIP_Lexer_Style"], [4, 4, 1, "", "pygments_monkeypatch_style"]], "dipsl.pygments.DIP_Lexer_Style.DIP_Lexer_Style": [[4, 2, 1, "", "styles"]], "dipsl.pygments.DIP_Lexer_Syntax": [[4, 1, 1, "", "DIP_Lexer_Syntax"]], "dipsl.pygments.DIP_Lexer_Syntax.DIP_Lexer_Syntax": [[4, 2, 1, "", "name"], [4, 2, 1, "", "tokens"]], "dipsl.solvers": [[5, 0, 0, "-", "DIP_Solver_Logical"], [5, 0, 0, "-", "DIP_Solver_Numerical"], [5, 0, 0, "-", "DIP_Solver_Templates"], [5, 0, 0, "-", "DIP_Solver_Units"]], "dipsl.solvers.DIP_Solver_Logical": [[5, 1, 1, "", "LogicalSolver"]], "dipsl.solvers.DIP_Solver_Logical.LogicalSolver": [[5, 2, 1, "", "env"], [5, 3, 1, "", "solve"]], "dipsl.solvers.DIP_Solver_Numerical": [[5, 1, 1, "", "NumericalSolver"]], "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver": [[5, 2, 1, "", "env"], [5, 3, 1, "", "equal"], [5, 3, 1, "", "solve"]], "dipsl.solvers.DIP_Solver_Templates": [[5, 1, 1, "", "TemplateSolver"]], "dipsl.solvers.DIP_Solver_Templates.TemplateSolver": [[5, 2, 1, "", "env"], [5, 3, 1, "", "solve"], [5, 3, 1, "", "template"]], "dipsl.solvers.DIP_Solver_Units": [[5, 1, 1, "", "UnitSolver"]], "dipsl.solvers.DIP_Solver_Units.UnitSolver": [[5, 2, 1, "", "arbitrary"], [5, 2, 1, "", "base"], [5, 2, 1, "", "custom"], [5, 2, 1, "", "derivates"], [5, 2, 1, "", "nbase"], [5, 2, 1, "", "npbase"], [5, 2, 1, "", "prefixes"], [5, 3, 1, "", "solve"], [5, 3, 1, "", "unit"], [5, 2, 1, "", "units"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "content": [0, 1, 2, 3, 4, 5, 7, 8, 12, 15], "dipsl": [1, 2, 3, 4, 5, 6], "packag": [1, 2, 3, 4, 5], "subpackag": 1, "submodul": [1, 2, 3, 4, 5], "dip_environ": 1, "modul": [1, 2, 3, 4, 5], "dip_main": 1, "dip_set": 1, "dip_unit": 1, "dip_unitlist": 1, "datatyp": 2, "dip_typ": 2, "dip_type_boolean": 2, "dip_type_float": 2, "dip_type_integ": 2, "dip_type_numb": 2, "dip_type_str": 2, "node": [3, 18], "dip_nod": 3, "dip_nodebas": 3, "dip_node_boolean": 3, "dip_node_cas": 3, "dip_node_condit": 3, "dip_node_const": 3, "dip_node_empti": 3, "dip_node_float": 3, "dip_node_format": 3, "dip_node_group": 3, "dip_node_import": 3, "dip_node_integ": 3, "dip_node_mod": 3, "dip_node_opt": 3, "dip_node_sourc": 3, "dip_node_str": 3, "dip_node_t": 3, "dip_node_unit": 3, "dip_pars": 3, "pygment": [4, 12], "dip_lexer_schema": 4, "dip_lexer_styl": 4, "dip_lexer_syntax": 4, "solver": 5, "dip_solver_log": 5, "dip_solver_numer": 5, "dip_solver_templ": 5, "dip_solver_unit": 5, "dip": [7, 9, 10], "dimension": 7, "input": [7, 17], "paramet": 7, "indic": 7, "tabl": [7, 22], "introduct": 8, "about": 9, "exampl": 10, "us": 10, "pars": [10, 17], "code": 10, "get": 10, "data": 10, "definit": [10, 18], "templat": [10, 17], "instal": 11, "lexer": 12, "schema": 13, "highlit": [13, 14], "syntax": [14, 15], "condit": [16, 21], "express": 17, "valu": [17, 22], "logic": 17, "oper": [17, 20], "parenthesi": 17, "comparison": 17, "singl": 17, "numer": 17, "basic": 17, "parenthes": 17, "modif": 18, "declar": 18, "hierarchi": 18, "refer": 19, "import": 19, "inject": 19, "unit": 20, "base": 20, "prefix": 20, "deriv": 20, "si": 20, "cg": 20, "other": 20, "natur": 20, "dimensionless": 20, "custom": 20, "valid": 21, "option": 21, "format": 21, "constant": 21, "scalar": 22, "arrai": 22, "block": 22}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"API": [[0, "api"]], "Contents:": [[0, null], [7, null], [8, null], [12, null], [15, null]], "dipsl package": [[1, "dipsl-package"]], "Subpackages": [[1, "subpackages"]], "Submodules": [[1, "submodules"], [2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"]], "dipsl.DIP_Environment module": [[1, "module-dipsl.DIP_Environment"]], "dipsl.DIP_Main module": [[1, "module-dipsl.DIP_Main"]], "dipsl.DIP_Settings module": [[1, "module-dipsl.DIP_Settings"]], "dipsl.DIP_Unit module": [[1, "module-dipsl.DIP_Unit"]], "dipsl.DIP_UnitList module": [[1, "module-dipsl.DIP_UnitList"]], "Module contents": [[1, "module-dipsl"], [2, "module-dipsl.datatypes"], [3, "module-dipsl.nodes"], [4, "module-dipsl.pygments"], [5, "module-dipsl.solvers"]], "dipsl.datatypes package": [[2, "dipsl-datatypes-package"]], "dipsl.datatypes.DIP_Type module": [[2, "module-dipsl.datatypes.DIP_Type"]], "dipsl.datatypes.DIP_Type_Boolean module": [[2, "module-dipsl.datatypes.DIP_Type_Boolean"]], "dipsl.datatypes.DIP_Type_Float module": [[2, "module-dipsl.datatypes.DIP_Type_Float"]], "dipsl.datatypes.DIP_Type_Integer module": [[2, "module-dipsl.datatypes.DIP_Type_Integer"]], "dipsl.datatypes.DIP_Type_Number module": [[2, "module-dipsl.datatypes.DIP_Type_Number"]], "dipsl.datatypes.DIP_Type_String module": [[2, "module-dipsl.datatypes.DIP_Type_String"]], "dipsl.nodes package": [[3, "dipsl-nodes-package"]], "dipsl.nodes.DIP_Node module": [[3, "module-dipsl.nodes.DIP_Node"]], "dipsl.nodes.DIP_NodeBase module": [[3, "module-dipsl.nodes.DIP_NodeBase"]], "dipsl.nodes.DIP_Node_Boolean module": [[3, "module-dipsl.nodes.DIP_Node_Boolean"]], "dipsl.nodes.DIP_Node_Case module": [[3, "module-dipsl.nodes.DIP_Node_Case"]], "dipsl.nodes.DIP_Node_Condition module": [[3, "module-dipsl.nodes.DIP_Node_Condition"]], "dipsl.nodes.DIP_Node_Constant module": [[3, "module-dipsl.nodes.DIP_Node_Constant"]], "dipsl.nodes.DIP_Node_Empty module": [[3, "module-dipsl.nodes.DIP_Node_Empty"]], "dipsl.nodes.DIP_Node_Float module": [[3, "module-dipsl.nodes.DIP_Node_Float"]], "dipsl.nodes.DIP_Node_Format module": [[3, "module-dipsl.nodes.DIP_Node_Format"]], "dipsl.nodes.DIP_Node_Group module": [[3, "module-dipsl.nodes.DIP_Node_Group"]], "dipsl.nodes.DIP_Node_Import module": [[3, "module-dipsl.nodes.DIP_Node_Import"]], "dipsl.nodes.DIP_Node_Integer module": [[3, "module-dipsl.nodes.DIP_Node_Integer"]], "dipsl.nodes.DIP_Node_Mod module": [[3, "module-dipsl.nodes.DIP_Node_Mod"]], "dipsl.nodes.DIP_Node_Option module": [[3, "module-dipsl.nodes.DIP_Node_Option"]], "dipsl.nodes.DIP_Node_Source module": [[3, "module-dipsl.nodes.DIP_Node_Source"]], "dipsl.nodes.DIP_Node_String module": [[3, "module-dipsl.nodes.DIP_Node_String"]], "dipsl.nodes.DIP_Node_Table module": [[3, "module-dipsl.nodes.DIP_Node_Table"]], "dipsl.nodes.DIP_Node_Unit module": [[3, "module-dipsl.nodes.DIP_Node_Unit"]], "dipsl.nodes.DIP_Parser module": [[3, "module-dipsl.nodes.DIP_Parser"]], "dipsl.pygments package": [[4, "dipsl-pygments-package"]], "dipsl.pygments.DIP_Lexer_Schema module": [[4, "module-dipsl.pygments.DIP_Lexer_Schema"]], "dipsl.pygments.DIP_Lexer_Style module": [[4, "module-dipsl.pygments.DIP_Lexer_Style"]], "dipsl.pygments.DIP_Lexer_Syntax module": [[4, "module-dipsl.pygments.DIP_Lexer_Syntax"]], "dipsl.solvers package": [[5, "dipsl-solvers-package"]], "dipsl.solvers.DIP_Solver_Logical module": [[5, "module-dipsl.solvers.DIP_Solver_Logical"]], "dipsl.solvers.DIP_Solver_Numerical module": [[5, "module-dipsl.solvers.DIP_Solver_Numerical"]], "dipsl.solvers.DIP_Solver_Templates module": [[5, "module-dipsl.solvers.DIP_Solver_Templates"]], "dipsl.solvers.DIP_Solver_Units module": [[5, "module-dipsl.solvers.DIP_Solver_Units"]], "dipsl": [[6, "dipsl"]], "DIP - Dimensional Input Parameters": [[7, "dip-dimensional-input-parameters"]], "Indices and tables": [[7, "indices-and-tables"]], "Introduction": [[8, "introduction"]], "About DIP": [[9, "about-dip"]], "Example of use": [[10, "example-of-use"]], "Parsing DIP code": [[10, "parsing-dip-code"]], "Getting parsed data": [[10, "getting-parsed-data"]], "Definitions": [[10, "definitions"]], "Templates": [[10, "templates"], [17, "templates"]], "Installation": [[11, "installation"]], "Pygments lexer": [[12, "pygments-lexer"]], "Schema highliter": [[13, "schema-highliter"]], "Syntax highliter": [[14, "syntax-highliter"]], "Syntax": [[15, "syntax"]], "Conditions": [[16, "conditions"]], "Expressions": [[17, "expressions"]], "Input values": [[17, "id2"]], "Logical": [[17, "logical"]], "Logical operators": [[17, "id3"]], "Parenthesis operator": [[17, "id4"]], "Comparison operators": [[17, "id5"]], "Single value operators": [[17, "id6"]], "Numerical": [[17, "numerical"]], "Basic operations": [[17, "id7"]], "Parentheses operators": [[17, "id8"]], "Parsing operators": [[17, "id9"]], "Nodes": [[18, "nodes"]], "Definition": [[18, "definition"]], "Modification": [[18, "modification"]], "Declaration": [[18, "declaration"]], "Hierarchy": [[18, "hierarchy"]], "References": [[19, "references"]], "Imports": [[19, "imports"]], "Injections": [[19, "injections"]], "Units": [[20, "units"]], "Base units": [[20, "base-units"], [20, "id1"]], "Prefixes": [[20, "prefixes"]], "Unit prefixes": [[20, "id2"]], "Derived units": [[20, "derived-units"]], "Unit operators": [[20, "id3"]], "Derived SI units": [[20, "id4"]], "Derived CGS units": [[20, "id5"]], "Other derived units": [[20, "id6"]], "Natural units": [[20, "id7"]], "Dimensionless units": [[20, "id8"]], "Custom units": [[20, "custom-units"]], "Validation": [[21, "validation"]], "Options": [[21, "options"]], "Condition": [[21, "condition"]], "Format": [[21, "format"]], "Constants": [[21, "constants"]], "Values": [[22, "values"]], "Scalars": [[22, "scalars"]], "Arrays": [[22, "arrays"]], "Blocks": [[22, "blocks"]], "Tables": [[22, "tables"]]}, "indexentries": {"convert_arbitrary() (in module dipsl.dip_unitlist)": [[1, "dipsl.DIP_UnitList.Convert_Arbitrary"]], "dip (class in dipsl.dip_main)": [[1, "dipsl.DIP_Main.DIP"]], "environment (class in dipsl.dip_environment)": [[1, "dipsl.DIP_Environment.Environment"]], "unit (class in dipsl.dip_unit)": [[1, "dipsl.DIP_Unit.Unit"]], "arbitrary (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.arbitrary"]], "autoref (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.autoref"]], "base (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.base"]], "case_counts (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.case_counts"]], "case_names (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.case_names"]], "code() (dipsl.dip_main.dip method)": [[1, "dipsl.DIP_Main.DIP.code"]], "copy() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.copy"]], "data() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.data"]], "dfn (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.dfn"]], "dimension() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.dimension"]], "dipsl": [[1, "module-dipsl"]], "dipsl.dip_environment": [[1, "module-dipsl.DIP_Environment"]], "dipsl.dip_main": [[1, "module-dipsl.DIP_Main"]], "dipsl.dip_settings": [[1, "module-dipsl.DIP_Settings"]], "dipsl.dip_unit": [[1, "module-dipsl.DIP_Unit"]], "dipsl.dip_unitlist": [[1, "module-dipsl.DIP_UnitList"]], "env (dipsl.dip_main.dip attribute)": [[1, "dipsl.DIP_Main.DIP.env"]], "eqdim() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.eqdim"]], "eqnum() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.eqnum"]], "inunitsof() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.inunitsof"]], "is_case() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.is_case"]], "isnumeric() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.isnumeric"]], "lines (dipsl.dip_main.dip attribute)": [[1, "dipsl.DIP_Main.DIP.lines"]], "load() (dipsl.dip_main.dip method)": [[1, "dipsl.DIP_Main.DIP.load"]], "module": [[1, "module-dipsl"], [1, "module-dipsl.DIP_Environment"], [1, "module-dipsl.DIP_Main"], [1, "module-dipsl.DIP_Settings"], [1, "module-dipsl.DIP_Unit"], [1, "module-dipsl.DIP_UnitList"], [2, "module-dipsl.datatypes"], [2, "module-dipsl.datatypes.DIP_Type"], [2, "module-dipsl.datatypes.DIP_Type_Boolean"], [2, "module-dipsl.datatypes.DIP_Type_Float"], [2, "module-dipsl.datatypes.DIP_Type_Integer"], [2, "module-dipsl.datatypes.DIP_Type_Number"], [2, "module-dipsl.datatypes.DIP_Type_String"], [3, "module-dipsl.nodes"], [3, "module-dipsl.nodes.DIP_Node"], [3, "module-dipsl.nodes.DIP_NodeBase"], [3, "module-dipsl.nodes.DIP_Node_Boolean"], [3, "module-dipsl.nodes.DIP_Node_Case"], [3, "module-dipsl.nodes.DIP_Node_Condition"], [3, "module-dipsl.nodes.DIP_Node_Constant"], [3, "module-dipsl.nodes.DIP_Node_Empty"], [3, "module-dipsl.nodes.DIP_Node_Float"], [3, "module-dipsl.nodes.DIP_Node_Format"], [3, "module-dipsl.nodes.DIP_Node_Group"], [3, "module-dipsl.nodes.DIP_Node_Import"], [3, "module-dipsl.nodes.DIP_Node_Integer"], [3, "module-dipsl.nodes.DIP_Node_Mod"], [3, "module-dipsl.nodes.DIP_Node_Option"], [3, "module-dipsl.nodes.DIP_Node_Source"], [3, "module-dipsl.nodes.DIP_Node_String"], [3, "module-dipsl.nodes.DIP_Node_Table"], [3, "module-dipsl.nodes.DIP_Node_Unit"], [3, "module-dipsl.nodes.DIP_Parser"], [4, "module-dipsl.pygments"], [4, "module-dipsl.pygments.DIP_Lexer_Schema"], [4, "module-dipsl.pygments.DIP_Lexer_Style"], [4, "module-dipsl.pygments.DIP_Lexer_Syntax"], [5, "module-dipsl.solvers"], [5, "module-dipsl.solvers.DIP_Solver_Logical"], [5, "module-dipsl.solvers.DIP_Solver_Numerical"], [5, "module-dipsl.solvers.DIP_Solver_Templates"], [5, "module-dipsl.solvers.DIP_Solver_Units"]], "name (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.name"]], "nodes (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.nodes"]], "num (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.num"]], "number() (dipsl.dip_unit.unit method)": [[1, "dipsl.DIP_Unit.Unit.number"]], "parent_indents (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.parent_indents"]], "parent_names (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.parent_names"]], "parse() (dipsl.dip_main.dip method)": [[1, "dipsl.DIP_Main.DIP.parse"]], "pop_node() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.pop_node"]], "prepare_node() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.prepare_node"]], "prepend_nodes() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.prepend_nodes"]], "query() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.query"]], "request() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.request"]], "solve_case() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.solve_case"]], "source (dipsl.dip_main.dip attribute)": [[1, "dipsl.DIP_Main.DIP.source"]], "sources (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.sources"]], "symbol (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.symbol"]], "symbol_base (dipsl.dip_unit.unit attribute)": [[1, "dipsl.DIP_Unit.Unit.symbol_base"]], "units (dipsl.dip_environment.environment attribute)": [[1, "dipsl.DIP_Environment.Environment.units"]], "update_hierarchy() (dipsl.dip_environment.environment method)": [[1, "dipsl.DIP_Environment.Environment.update_hierarchy"]], "booleantype (class in dipsl.datatypes.dip_type_boolean)": [[2, "dipsl.datatypes.DIP_Type_Boolean.BooleanType"]], "floattype (class in dipsl.datatypes.dip_type_float)": [[2, "dipsl.datatypes.DIP_Type_Float.FloatType"]], "integertype (class in dipsl.datatypes.dip_type_integer)": [[2, "dipsl.datatypes.DIP_Type_Integer.IntegerType"]], "numbertype (class in dipsl.datatypes.dip_type_number)": [[2, "dipsl.datatypes.DIP_Type_Number.NumberType"]], "stringtype (class in dipsl.datatypes.dip_type_string)": [[2, "dipsl.datatypes.DIP_Type_String.StringType"]], "type (class in dipsl.datatypes.dip_type)": [[2, "dipsl.datatypes.DIP_Type.Type"]], "convert() (dipsl.datatypes.dip_type_number.numbertype method)": [[2, "dipsl.datatypes.DIP_Type_Number.NumberType.convert"]], "dipsl.datatypes": [[2, "module-dipsl.datatypes"]], "dipsl.datatypes.dip_type": [[2, "module-dipsl.datatypes.DIP_Type"]], "dipsl.datatypes.dip_type_boolean": [[2, "module-dipsl.datatypes.DIP_Type_Boolean"]], "dipsl.datatypes.dip_type_float": [[2, "module-dipsl.datatypes.DIP_Type_Float"]], "dipsl.datatypes.dip_type_integer": [[2, "module-dipsl.datatypes.DIP_Type_Integer"]], "dipsl.datatypes.dip_type_number": [[2, "module-dipsl.datatypes.DIP_Type_Number"]], "dipsl.datatypes.dip_type_string": [[2, "module-dipsl.datatypes.DIP_Type_String"]], "dtype (dipsl.datatypes.dip_type_boolean.booleantype attribute)": [[2, "dipsl.datatypes.DIP_Type_Boolean.BooleanType.dtype"]], "dtype (dipsl.datatypes.dip_type_float.floattype attribute)": [[2, "dipsl.datatypes.DIP_Type_Float.FloatType.dtype"]], "dtype (dipsl.datatypes.dip_type_integer.integertype attribute)": [[2, "dipsl.datatypes.DIP_Type_Integer.IntegerType.dtype"]], "dtype (dipsl.datatypes.dip_type_string.stringtype attribute)": [[2, "dipsl.datatypes.DIP_Type_String.StringType.dtype"]], "unit (dipsl.datatypes.dip_type.type attribute)": [[2, "dipsl.datatypes.DIP_Type.Type.unit"]], "value (dipsl.datatypes.dip_type.type attribute)": [[2, "dipsl.datatypes.DIP_Type.Type.value"]], "value (dipsl.datatypes.dip_type_boolean.booleantype attribute)": [[2, "dipsl.datatypes.DIP_Type_Boolean.BooleanType.value"]], "value (dipsl.datatypes.dip_type_float.floattype attribute)": [[2, "dipsl.datatypes.DIP_Type_Float.FloatType.value"]], "value (dipsl.datatypes.dip_type_integer.integertype attribute)": [[2, "dipsl.datatypes.DIP_Type_Integer.IntegerType.value"]], "value (dipsl.datatypes.dip_type_string.stringtype attribute)": [[2, "dipsl.datatypes.DIP_Type_String.StringType.value"]], "booleannode (class in dipsl.nodes.dip_node_boolean)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode"]], "casenode (class in dipsl.nodes.dip_node_case)": [[3, "dipsl.nodes.DIP_Node_Case.CaseNode"]], "conditionnode (class in dipsl.nodes.dip_node_condition)": [[3, "dipsl.nodes.DIP_Node_Condition.ConditionNode"]], "constantnode (class in dipsl.nodes.dip_node_constant)": [[3, "dipsl.nodes.DIP_Node_Constant.ConstantNode"]], "emptynode (class in dipsl.nodes.dip_node_empty)": [[3, "dipsl.nodes.DIP_Node_Empty.EmptyNode"]], "floatnode (class in dipsl.nodes.dip_node_float)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode"]], "formatnode (class in dipsl.nodes.dip_node_format)": [[3, "dipsl.nodes.DIP_Node_Format.FormatNode"]], "groupnode (class in dipsl.nodes.dip_node_group)": [[3, "dipsl.nodes.DIP_Node_Group.GroupNode"]], "importnode (class in dipsl.nodes.dip_node_import)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode"]], "integernode (class in dipsl.nodes.dip_node_integer)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode"]], "modnode (class in dipsl.nodes.dip_node_mod)": [[3, "dipsl.nodes.DIP_Node_Mod.ModNode"]], "node (class in dipsl.nodes.dip_node)": [[3, "dipsl.nodes.DIP_Node.Node"]], "nodebase (class in dipsl.nodes.dip_nodebase)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase"]], "optionnode (class in dipsl.nodes.dip_node_option)": [[3, "dipsl.nodes.DIP_Node_Option.OptionNode"]], "parser (class in dipsl.nodes.dip_parser)": [[3, "dipsl.nodes.DIP_Parser.Parser"]], "sourcenode (class in dipsl.nodes.dip_node_source)": [[3, "dipsl.nodes.DIP_Node_Source.SourceNode"]], "stringnode (class in dipsl.nodes.dip_node_string)": [[3, "dipsl.nodes.DIP_Node_String.StringNode"]], "tablenode (class in dipsl.nodes.dip_node_table)": [[3, "dipsl.nodes.DIP_Node_Table.TableNode"]], "unitnode (class in dipsl.nodes.dip_node_unit)": [[3, "dipsl.nodes.DIP_Node_Unit.UnitNode"]], "cast_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.cast_value"]], "ccode (dipsl.nodes.dip_parser.parser attribute)": [[3, "dipsl.nodes.DIP_Parser.Parser.ccode"]], "code (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.code"]], "comment (dipsl.nodes.dip_parser.parser attribute)": [[3, "dipsl.nodes.DIP_Parser.Parser.comment"]], "condition (dipsl.nodes.dip_node.node attribute)": [[3, "dipsl.nodes.DIP_Node.Node.condition"]], "constant (dipsl.nodes.dip_node.node attribute)": [[3, "dipsl.nodes.DIP_Node.Node.constant"]], "defined (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.defined"]], "dimension (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.dimension"]], "dipsl.nodes": [[3, "module-dipsl.nodes"]], "dipsl.nodes.dip_node": [[3, "module-dipsl.nodes.DIP_Node"]], "dipsl.nodes.dip_nodebase": [[3, "module-dipsl.nodes.DIP_NodeBase"]], "dipsl.nodes.dip_node_boolean": [[3, "module-dipsl.nodes.DIP_Node_Boolean"]], "dipsl.nodes.dip_node_case": [[3, "module-dipsl.nodes.DIP_Node_Case"]], "dipsl.nodes.dip_node_condition": [[3, "module-dipsl.nodes.DIP_Node_Condition"]], "dipsl.nodes.dip_node_constant": [[3, "module-dipsl.nodes.DIP_Node_Constant"]], "dipsl.nodes.dip_node_empty": [[3, "module-dipsl.nodes.DIP_Node_Empty"]], "dipsl.nodes.dip_node_float": [[3, "module-dipsl.nodes.DIP_Node_Float"]], "dipsl.nodes.dip_node_format": [[3, "module-dipsl.nodes.DIP_Node_Format"]], "dipsl.nodes.dip_node_group": [[3, "module-dipsl.nodes.DIP_Node_Group"]], "dipsl.nodes.dip_node_import": [[3, "module-dipsl.nodes.DIP_Node_Import"]], "dipsl.nodes.dip_node_integer": [[3, "module-dipsl.nodes.DIP_Node_Integer"]], "dipsl.nodes.dip_node_mod": [[3, "module-dipsl.nodes.DIP_Node_Mod"]], "dipsl.nodes.dip_node_option": [[3, "module-dipsl.nodes.DIP_Node_Option"]], "dipsl.nodes.dip_node_source": [[3, "module-dipsl.nodes.DIP_Node_Source"]], "dipsl.nodes.dip_node_string": [[3, "module-dipsl.nodes.DIP_Node_String"]], "dipsl.nodes.dip_node_table": [[3, "module-dipsl.nodes.DIP_Node_Table"]], "dipsl.nodes.dip_node_unit": [[3, "module-dipsl.nodes.DIP_Node_Unit"]], "dipsl.nodes.dip_parser": [[3, "module-dipsl.nodes.DIP_Parser"]], "dtype (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.dtype"]], "dtype (dipsl.nodes.dip_node_boolean.booleannode attribute)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.dtype"]], "dtype (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.dtype"]], "dtype (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.dtype"]], "format (dipsl.nodes.dip_node_string.stringnode attribute)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.format"]], "formating (dipsl.nodes.dip_parser.parser attribute)": [[3, "dipsl.nodes.DIP_Parser.Parser.formating"]], "indent (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.indent"]], "inject_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.inject_value"]], "inject_value() (dipsl.nodes.dip_node_import.importnode method)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode.inject_value"]], "is_empty() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.is_empty"]], "is_node() (dipsl.nodes.dip_node_boolean.booleannode static method)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.is_node"]], "is_node() (dipsl.nodes.dip_node_case.casenode static method)": [[3, "dipsl.nodes.DIP_Node_Case.CaseNode.is_node"]], "is_node() (dipsl.nodes.dip_node_condition.conditionnode static method)": [[3, "dipsl.nodes.DIP_Node_Condition.ConditionNode.is_node"]], "is_node() (dipsl.nodes.dip_node_constant.constantnode static method)": [[3, "dipsl.nodes.DIP_Node_Constant.ConstantNode.is_node"]], "is_node() (dipsl.nodes.dip_node_empty.emptynode static method)": [[3, "dipsl.nodes.DIP_Node_Empty.EmptyNode.is_node"]], "is_node() (dipsl.nodes.dip_node_float.floatnode static method)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.is_node"]], "is_node() (dipsl.nodes.dip_node_format.formatnode static method)": [[3, "dipsl.nodes.DIP_Node_Format.FormatNode.is_node"]], "is_node() (dipsl.nodes.dip_node_group.groupnode static method)": [[3, "dipsl.nodes.DIP_Node_Group.GroupNode.is_node"]], "is_node() (dipsl.nodes.dip_node_import.importnode method)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode.is_node"]], "is_node() (dipsl.nodes.dip_node_integer.integernode static method)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.is_node"]], "is_node() (dipsl.nodes.dip_node_mod.modnode static method)": [[3, "dipsl.nodes.DIP_Node_Mod.ModNode.is_node"]], "is_node() (dipsl.nodes.dip_node_option.optionnode static method)": [[3, "dipsl.nodes.DIP_Node_Option.OptionNode.is_node"]], "is_node() (dipsl.nodes.dip_node_source.sourcenode static method)": [[3, "dipsl.nodes.DIP_Node_Source.SourceNode.is_node"]], "is_node() (dipsl.nodes.dip_node_string.stringnode static method)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.is_node"]], "is_node() (dipsl.nodes.dip_node_table.tablenode static method)": [[3, "dipsl.nodes.DIP_Node_Table.TableNode.is_node"]], "is_node() (dipsl.nodes.dip_node_unit.unitnode static method)": [[3, "dipsl.nodes.DIP_Node_Unit.UnitNode.is_node"]], "is_parsed() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.is_parsed"]], "keyword (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.keyword"]], "keyword (dipsl.nodes.dip_node_boolean.booleannode attribute)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.keyword"]], "keyword (dipsl.nodes.dip_node_case.casenode attribute)": [[3, "dipsl.nodes.DIP_Node_Case.CaseNode.keyword"]], "keyword (dipsl.nodes.dip_node_condition.conditionnode attribute)": [[3, "dipsl.nodes.DIP_Node_Condition.ConditionNode.keyword"]], "keyword (dipsl.nodes.dip_node_constant.constantnode attribute)": [[3, "dipsl.nodes.DIP_Node_Constant.ConstantNode.keyword"]], "keyword (dipsl.nodes.dip_node_empty.emptynode attribute)": [[3, "dipsl.nodes.DIP_Node_Empty.EmptyNode.keyword"]], "keyword (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.keyword"]], "keyword (dipsl.nodes.dip_node_format.formatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Format.FormatNode.keyword"]], "keyword (dipsl.nodes.dip_node_group.groupnode attribute)": [[3, "dipsl.nodes.DIP_Node_Group.GroupNode.keyword"]], "keyword (dipsl.nodes.dip_node_import.importnode attribute)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode.keyword"]], "keyword (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.keyword"]], "keyword (dipsl.nodes.dip_node_mod.modnode attribute)": [[3, "dipsl.nodes.DIP_Node_Mod.ModNode.keyword"]], "keyword (dipsl.nodes.dip_node_option.optionnode attribute)": [[3, "dipsl.nodes.DIP_Node_Option.OptionNode.keyword"]], "keyword (dipsl.nodes.dip_node_source.sourcenode attribute)": [[3, "dipsl.nodes.DIP_Node_Source.SourceNode.keyword"]], "keyword (dipsl.nodes.dip_node_string.stringnode attribute)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.keyword"]], "keyword (dipsl.nodes.dip_node_table.tablenode attribute)": [[3, "dipsl.nodes.DIP_Node_Table.TableNode.keyword"]], "keyword (dipsl.nodes.dip_node_unit.unitnode attribute)": [[3, "dipsl.nodes.DIP_Node_Unit.UnitNode.keyword"]], "kwd_case() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_case"]], "kwd_condition() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_condition"]], "kwd_constant() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_constant"]], "kwd_format() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_format"]], "kwd_options() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_options"]], "kwd_source() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_source"]], "kwd_unit() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.kwd_unit"]], "line (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.line"]], "modify_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.modify_value"]], "name (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.name"]], "options (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.options"]], "options (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.options"]], "options (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.options"]], "options (dipsl.nodes.dip_node_string.stringnode attribute)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.options"]], "parse() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.parse"]], "parse() (dipsl.nodes.dip_node_boolean.booleannode method)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.parse"]], "parse() (dipsl.nodes.dip_node_case.casenode method)": [[3, "dipsl.nodes.DIP_Node_Case.CaseNode.parse"]], "parse() (dipsl.nodes.dip_node_condition.conditionnode method)": [[3, "dipsl.nodes.DIP_Node_Condition.ConditionNode.parse"]], "parse() (dipsl.nodes.dip_node_constant.constantnode method)": [[3, "dipsl.nodes.DIP_Node_Constant.ConstantNode.parse"]], "parse() (dipsl.nodes.dip_node_float.floatnode method)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.parse"]], "parse() (dipsl.nodes.dip_node_format.formatnode method)": [[3, "dipsl.nodes.DIP_Node_Format.FormatNode.parse"]], "parse() (dipsl.nodes.dip_node_import.importnode method)": [[3, "dipsl.nodes.DIP_Node_Import.ImportNode.parse"]], "parse() (dipsl.nodes.dip_node_integer.integernode method)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.parse"]], "parse() (dipsl.nodes.dip_node_mod.modnode method)": [[3, "dipsl.nodes.DIP_Node_Mod.ModNode.parse"]], "parse() (dipsl.nodes.dip_node_option.optionnode method)": [[3, "dipsl.nodes.DIP_Node_Option.OptionNode.parse"]], "parse() (dipsl.nodes.dip_node_source.sourcenode method)": [[3, "dipsl.nodes.DIP_Node_Source.SourceNode.parse"]], "parse() (dipsl.nodes.dip_node_string.stringnode method)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.parse"]], "parse() (dipsl.nodes.dip_node_table.tablenode method)": [[3, "dipsl.nodes.DIP_Node_Table.TableNode.parse"]], "parse() (dipsl.nodes.dip_node_unit.unitnode method)": [[3, "dipsl.nodes.DIP_Node_Unit.UnitNode.parse"]], "parsed (dipsl.nodes.dip_parser.parser attribute)": [[3, "dipsl.nodes.DIP_Parser.Parser.parsed"]], "part_comment() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_comment"]], "part_dimension() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_dimension"]], "part_equal() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_equal"]], "part_expression() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_expression"]], "part_format() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_format"]], "part_indent() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_indent"]], "part_name() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_name"]], "part_reference() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_reference"]], "part_slice() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_slice"]], "part_type() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_type"]], "part_units() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_units"]], "part_value() (dipsl.nodes.dip_parser.parser method)": [[3, "dipsl.nodes.DIP_Parser.Parser.part_value"]], "set_option() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.set_option"]], "set_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.set_value"]], "set_value() (dipsl.nodes.dip_node_boolean.booleannode method)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.set_value"]], "set_value() (dipsl.nodes.dip_node_float.floatnode method)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.set_value"]], "set_value() (dipsl.nodes.dip_node_integer.integernode method)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.set_value"]], "set_value() (dipsl.nodes.dip_node_string.stringnode method)": [[3, "dipsl.nodes.DIP_Node_String.StringNode.set_value"]], "slice_value() (dipsl.nodes.dip_node.node method)": [[3, "dipsl.nodes.DIP_Node.Node.slice_value"]], "source (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.source"]], "units_raw (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.units_raw"]], "value (dipsl.nodes.dip_node.node attribute)": [[3, "dipsl.nodes.DIP_Node.Node.value"]], "value (dipsl.nodes.dip_node_boolean.booleannode attribute)": [[3, "dipsl.nodes.DIP_Node_Boolean.BooleanNode.value"]], "value (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.value"]], "value (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.value"]], "value_expr (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.value_expr"]], "value_expr (dipsl.nodes.dip_node_float.floatnode attribute)": [[3, "dipsl.nodes.DIP_Node_Float.FloatNode.value_expr"]], "value_expr (dipsl.nodes.dip_node_integer.integernode attribute)": [[3, "dipsl.nodes.DIP_Node_Integer.IntegerNode.value_expr"]], "value_raw (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.value_raw"]], "value_ref (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.value_ref"]], "value_slice (dipsl.nodes.dip_nodebase.nodebase attribute)": [[3, "dipsl.nodes.DIP_NodeBase.NodeBase.value_slice"]], "dip_lexer_schema (class in dipsl.pygments.dip_lexer_schema)": [[4, "dipsl.pygments.DIP_Lexer_Schema.DIP_Lexer_Schema"]], "dip_lexer_style (class in dipsl.pygments.dip_lexer_style)": [[4, "dipsl.pygments.DIP_Lexer_Style.DIP_Lexer_Style"]], "dip_lexer_syntax (class in dipsl.pygments.dip_lexer_syntax)": [[4, "dipsl.pygments.DIP_Lexer_Syntax.DIP_Lexer_Syntax"]], "dipsl.pygments": [[4, "module-dipsl.pygments"]], "dipsl.pygments.dip_lexer_schema": [[4, "module-dipsl.pygments.DIP_Lexer_Schema"]], "dipsl.pygments.dip_lexer_style": [[4, "module-dipsl.pygments.DIP_Lexer_Style"]], "dipsl.pygments.dip_lexer_syntax": [[4, "module-dipsl.pygments.DIP_Lexer_Syntax"]], "name (dipsl.pygments.dip_lexer_schema.dip_lexer_schema attribute)": [[4, "dipsl.pygments.DIP_Lexer_Schema.DIP_Lexer_Schema.name"]], "name (dipsl.pygments.dip_lexer_syntax.dip_lexer_syntax attribute)": [[4, "dipsl.pygments.DIP_Lexer_Syntax.DIP_Lexer_Syntax.name"]], "pygments_monkeypatch_style() (in module dipsl.pygments.dip_lexer_style)": [[4, "dipsl.pygments.DIP_Lexer_Style.pygments_monkeypatch_style"]], "styles (dipsl.pygments.dip_lexer_style.dip_lexer_style attribute)": [[4, "dipsl.pygments.DIP_Lexer_Style.DIP_Lexer_Style.styles"]], "tokens (dipsl.pygments.dip_lexer_schema.dip_lexer_schema attribute)": [[4, "dipsl.pygments.DIP_Lexer_Schema.DIP_Lexer_Schema.tokens"]], "tokens (dipsl.pygments.dip_lexer_syntax.dip_lexer_syntax attribute)": [[4, "dipsl.pygments.DIP_Lexer_Syntax.DIP_Lexer_Syntax.tokens"]], "logicalsolver (class in dipsl.solvers.dip_solver_logical)": [[5, "dipsl.solvers.DIP_Solver_Logical.LogicalSolver"]], "numericalsolver (class in dipsl.solvers.dip_solver_numerical)": [[5, "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver"]], "templatesolver (class in dipsl.solvers.dip_solver_templates)": [[5, "dipsl.solvers.DIP_Solver_Templates.TemplateSolver"]], "unitsolver (class in dipsl.solvers.dip_solver_units)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver"]], "arbitrary (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.arbitrary"]], "base (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.base"]], "custom (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.custom"]], "derivates (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.derivates"]], "dipsl.solvers": [[5, "module-dipsl.solvers"]], "dipsl.solvers.dip_solver_logical": [[5, "module-dipsl.solvers.DIP_Solver_Logical"]], "dipsl.solvers.dip_solver_numerical": [[5, "module-dipsl.solvers.DIP_Solver_Numerical"]], "dipsl.solvers.dip_solver_templates": [[5, "module-dipsl.solvers.DIP_Solver_Templates"]], "dipsl.solvers.dip_solver_units": [[5, "module-dipsl.solvers.DIP_Solver_Units"]], "env (dipsl.solvers.dip_solver_logical.logicalsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Logical.LogicalSolver.env"]], "env (dipsl.solvers.dip_solver_numerical.numericalsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver.env"]], "env (dipsl.solvers.dip_solver_templates.templatesolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Templates.TemplateSolver.env"]], "equal() (dipsl.solvers.dip_solver_numerical.numericalsolver method)": [[5, "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver.equal"]], "nbase (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.nbase"]], "npbase (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.npbase"]], "prefixes (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.prefixes"]], "solve() (dipsl.solvers.dip_solver_logical.logicalsolver method)": [[5, "dipsl.solvers.DIP_Solver_Logical.LogicalSolver.solve"]], "solve() (dipsl.solvers.dip_solver_numerical.numericalsolver method)": [[5, "dipsl.solvers.DIP_Solver_Numerical.NumericalSolver.solve"]], "solve() (dipsl.solvers.dip_solver_templates.templatesolver method)": [[5, "dipsl.solvers.DIP_Solver_Templates.TemplateSolver.solve"]], "solve() (dipsl.solvers.dip_solver_units.unitsolver method)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.solve"]], "template() (dipsl.solvers.dip_solver_templates.templatesolver method)": [[5, "dipsl.solvers.DIP_Solver_Templates.TemplateSolver.template"]], "unit() (dipsl.solvers.dip_solver_units.unitsolver method)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.unit"]], "units (dipsl.solvers.dip_solver_units.unitsolver attribute)": [[5, "dipsl.solvers.DIP_Solver_Units.UnitSolver.units"]]}})